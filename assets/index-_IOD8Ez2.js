const $r="14.7.77",wr=(n,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:n}),xr=(n,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:n}),Qn=(n,t)=>({startTime:t,type:"setValue",value:n}),Qr=(n,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:n}),Xr=(n,t,{startTime:e,target:s,timeConstant:i})=>s+(t-s)*Math.exp((e-n)/i),He=n=>n.type==="exponentialRampToValue",pn=n=>n.type==="linearRampToValue",Se=n=>He(n)||pn(n),Zi=n=>n.type==="setValue",pe=n=>n.type==="setValueCurve",fn=(n,t,e,s)=>{const i=n[t];return i===void 0?s:Se(i)||Zi(i)?i.value:pe(i)?i.values[i.values.length-1]:Xr(e,fn(n,t-1,i.startTime,s),i)},br=(n,t,e,s,i)=>e===void 0?[s.insertTime,i]:Se(e)?[e.endTime,e.value]:Zi(e)?[e.startTime,e.value]:pe(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,fn(n,t-1,e.startTime,i)],Xn=n=>n.type==="cancelAndHold",Yn=n=>n.type==="cancelScheduledValues",Te=n=>Xn(n)||Yn(n)?n.cancelTime:He(n)||pn(n)?n.endTime:n.startTime,Tr=(n,t,e,{endTime:s,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((n-t)/(s-t)):0,Sr=(n,t,e,{endTime:s,value:i})=>e+(n-t)/(s-t)*(i-e),la=(n,t)=>{const e=Math.floor(t),s=Math.ceil(t);return e===s?n[e]:(1-(t-e))*n[e]+(1-(s-t))*n[s]},da=(n,{duration:t,startTime:e,values:s})=>{const i=(n-e)/t*(s.length-1);return la(s,i)},on=n=>n.type==="setTarget";class pa{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=Te(t);if(Xn(t)||Yn(t)){const s=this._automationEvents.findIndex(r=>Yn(t)&&pe(r)?r.startTime+r.duration>=e:Te(r)>=e),i=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),Xn(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&Se(i)){if(r!==void 0&&on(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:pe(r)?r.startTime+r.duration:Te(r),a=r===void 0?this._defaultValue:pe(r)?r.values[r.values.length-1]:r.value,c=He(i)?Tr(e,o,a,i):Sr(e,o,a,i),h=He(i)?wr(c,e,this._currenTime):xr(c,e,this._currenTime);this._automationEvents.push(h)}if(r!==void 0&&on(r)&&this._automationEvents.push(Qn(this.getValue(e),e)),r!==void 0&&pe(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),h=o/(c-1)*a,u=r.values.slice(0,c);if(h<1)for(let l=1;l<c;l+=1){const p=h*l%1;u[l]=r.values[l-1]*(1-p)+r.values[l]*p}this._automationEvents[this._automationEvents.length-1]=Qr(u,r.startTime,o)}}}else{const s=this._automationEvents.findIndex(o=>Te(o)>e),i=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(i!==void 0&&pe(i)&&Te(i)+i.duration>e)return!1;const r=He(t)?wr(t.value,t.endTime,this._currenTime):pn(t)?xr(t.value,e,this._currenTime):t;if(s===-1)this._automationEvents.push(r);else{if(pe(t)&&e+t.duration>Te(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(s=>Te(s)>t);if(e>1){const s=this._automationEvents.slice(e-1),i=s[0];on(i)&&s.unshift(Qn(fn(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=s}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>Te(o)>t),s=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&on(r)&&(s===void 0||!Se(s)||s.insertTime>t))return Xr(t,fn(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Zi(r)&&(s===void 0||!Se(s)))return r.value;if(r!==void 0&&pe(r)&&(s===void 0||!Se(s)||r.startTime+r.duration>t))return t<r.startTime+r.duration?da(t,r):r.values[r.values.length-1];if(r!==void 0&&Se(r)&&(s===void 0||!Se(s)))return r.value;if(s!==void 0&&He(s)){const[o,a]=br(this._automationEvents,i,r,s,this._defaultValue);return Tr(t,o,a,s)}if(s!==void 0&&pn(s)){const[o,a]=br(this._automationEvents,i,r,s,this._defaultValue);return Sr(t,o,a,s)}return this._defaultValue}}const fa=n=>({cancelTime:n,type:"cancelAndHold"}),ma=n=>({cancelTime:n,type:"cancelScheduledValues"}),_a=(n,t)=>({endTime:t,type:"exponentialRampToValue",value:n}),ga=(n,t)=>({endTime:t,type:"linearRampToValue",value:n}),ya=(n,t,e)=>({startTime:t,target:n,timeConstant:e,type:"setTarget"}),va=()=>new DOMException("","AbortError"),wa=n=>(t,e,[s,i,r],o)=>{n(t[i],[e,s,r],a=>a[0]===e&&a[1]===s,o)},xa=n=>(t,e,s)=>{const i=[];for(let r=0;r<s.numberOfInputs;r+=1)i.push(new Set);n.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},ba=n=>(t,e)=>{n.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},Ke=new WeakSet,Yr=new WeakMap,$i=new WeakMap,Hr=new WeakMap,Qi=new WeakMap,Mn=new WeakMap,Jr=new WeakMap,Hn=new WeakMap,Jn=new WeakMap,Kn=new WeakMap,Kr={construct(){return Kr}},Ta=n=>{try{const t=new Proxy(n,Kr);new t}catch{return!1}return!0},kr=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,Dr=(n,t)=>{const e=[];let s=n.replace(/^[\s]+/,""),i=s.match(kr);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),s=s.slice(i[0].length).replace(/^[\s]+/,""),i=s.match(kr)}return[e.join(";"),s]},Ar=n=>{if(n!==void 0&&!Array.isArray(n))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},Cr=n=>{if(!Ta(n))throw new TypeError("The given value for processorCtor should be a constructor.");if(n.prototype===null||typeof n.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Sa=(n,t,e,s,i,r,o,a,c,h,u,l,p)=>{let f=0;return(d,_,g={credentials:"omit"})=>{const v=u.get(d);if(v!==void 0&&v.has(_))return Promise.resolve();const T=h.get(d);if(T!==void 0){const y=T.get(_);if(y!==void 0)return y}const S=r(d),A=S.audioWorklet===void 0?i(_).then(([y,x])=>{const[b,w]=Dr(y,x),N=`${b};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${w}
})})(window,'_AWGS')`;return e(N)}).then(()=>{const y=p._AWGS.pop();if(y===void 0)throw new SyntaxError;s(S.currentTime,S.sampleRate,()=>y(class{},void 0,(x,b)=>{if(x.trim()==="")throw t();const w=Jn.get(S);if(w!==void 0){if(w.has(x))throw t();Cr(b),Ar(b.parameterDescriptors),w.set(x,b)}else Cr(b),Ar(b.parameterDescriptors),Jn.set(S,new Map([[x,b]]))},S.sampleRate,void 0,void 0))}):Promise.all([i(_),Promise.resolve(n(l,l))]).then(([[y,x],b])=>{const w=f+1;f=w;const[N,O]=Dr(y,x),M=`${N};((AudioWorkletProcessor,registerProcessor)=>{${O}
})(${b?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${b?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${b?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${w}',class extends AudioWorkletProcessor{process(){return !1}})`,W=new Blob([M],{type:"application/javascript; charset=utf-8"}),F=URL.createObjectURL(W);return S.audioWorklet.addModule(F,g).then(()=>{if(a(S))return S;const V=o(S);return V.audioWorklet.addModule(F,g).then(()=>V)}).then(V=>{if(c===null)throw new SyntaxError;try{new c(V,`__sac${w}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(F))});return T===void 0?h.set(d,new Map([[_,A]])):T.set(_,A),A.then(()=>{const y=u.get(d);y===void 0?u.set(d,new Set([_])):y.add(_)}).finally(()=>{const y=h.get(d);y!==void 0&&y.delete(_)}),A}},te=(n,t)=>{const e=n.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},Rn=(n,t)=>{const e=Array.from(n).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[s]=e;return n.delete(s),s},to=(n,t,e,s)=>{const i=te(n,t),r=Rn(i,o=>o[0]===e&&o[1]===s);return i.size===0&&n.delete(t),r},Us=n=>te(Jr,n),ts=n=>{if(Ke.has(n))throw new Error("The AudioNode is already stored.");Ke.add(n),Us(n).forEach(t=>t(!0))},eo=n=>"port"in n,Gs=n=>{if(!Ke.has(n))throw new Error("The AudioNode is not stored.");Ke.delete(n),Us(n).forEach(t=>t(!1))},ti=(n,t)=>{!eo(n)&&t.every(e=>e.size===0)&&Gs(n)},ka=(n,t,e,s,i,r,o,a,c,h,u,l,p)=>{const f=new WeakMap;return(d,_,g,v,T)=>{const{activeInputs:S,passiveInputs:A}=r(_),{outputs:y}=r(d),x=a(d),b=w=>{const N=c(_),O=c(d);if(w){const C=to(A,d,g,v);n(S,d,C,!1),!T&&!l(d)&&e(O,N,g,v),p(_)&&ts(_)}else{const C=s(S,d,g,v);t(A,v,C,!1),!T&&!l(d)&&i(O,N,g,v);const k=o(_);if(k===0)u(_)&&ti(_,S);else{const R=f.get(_);R!==void 0&&clearTimeout(R),f.set(_,setTimeout(()=>{u(_)&&ti(_,S)},k*1e3))}}};return h(y,[_,g,v],w=>w[0]===_&&w[1]===g&&w[2]===v,!0)?(x.add(b),u(d)?n(S,d,[g,v,b],!0):t(A,v,[d,g,b],!0),!0):!1}},Da=n=>(t,e,[s,i,r],o)=>{const a=t.get(s);a===void 0?t.set(s,new Set([[i,e,r]])):n(a,[i,e,r],c=>c[0]===i&&c[1]===e,o)},Aa=n=>(t,e)=>{const s=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(s).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(s),s.disconnect()};e.addEventListener("ended",i)},Ca=n=>(t,e)=>{n(t).add(e)},Oa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},Na=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=i(a),u={...Oa,...c},l=s(h,u),p=r(h)?t():null;super(a,!1,l,p),this._nativeAnalyserNode=l}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},Ot=(n,t)=>n.context===t,Ea=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Ot(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=n(o,h)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},mn=n=>{try{n.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},ce=()=>new DOMException("","IndexSizeError"),Xi=n=>{n.getChannelData=(t=>e=>{try{return t.call(n,e)}catch(s){throw s.code===12?ce():s}})(n.getChannelData)},Ma={numberOfChannels:1},Ra=(n,t,e,s,i,r,o,a)=>{let c=null;return class so{constructor(u){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:l,numberOfChannels:p,sampleRate:f}={...Ma,...u};c===null&&(c=new i(1,1,44100));const d=s!==null&&t(r,r)?new s({length:l,numberOfChannels:p,sampleRate:f}):c.createBuffer(p,l,f);if(d.numberOfChannels===0)throw e();return typeof d.copyFromChannel!="function"?(o(d),Xi(d)):t(mn,()=>mn(d))||a(d),n.add(d),d}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===so.prototype||n.has(u)}}},qt=-34028234663852886e22,Et=-qt,fe=n=>Ke.has(n),Ia={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},qa=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,u){const l=r(h),p={...Ia,...u},f=i(l,p),d=o(l),_=d?t():null;super(h,!1,f,_),this._audioBufferSourceNodeRenderer=_,this._isBufferNullified=!1,this._isBufferSet=p.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,d,f.playbackRate,Et,qt)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(h){if(this._nativeAudioBufferSourceNode.buffer=h,h!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(h){this._nativeAudioBufferSourceNode.loop=h}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(h){this._nativeAudioBufferSourceNode.loopEnd=h}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(h){this._nativeAudioBufferSourceNode.loopStart=h}get onended(){return this._onended}set onended(h){const u=typeof h=="function"?a(this,h):null;this._nativeAudioBufferSourceNode.onended=u;const l=this._nativeAudioBufferSourceNode.onended;this._onended=l!==null&&l===u?h:l}get playbackRate(){return this._playbackRate}start(h=0,u=0,l){if(this._nativeAudioBufferSourceNode.start(h,u,l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=l===void 0?[h,u]:[h,u,l]),this.context.state!=="closed"){ts(this);const p=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",p),fe(this)&&Gs(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",p)}}stop(h=0){this._nativeAudioBufferSourceNode.stop(h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=h)}},Fa=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(h,u)=>{let l=e(h);const p=Ot(l,u);if(!p){const f={buffer:l.buffer,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,loop:l.loop,loopEnd:l.loopEnd,loopStart:l.loopStart,playbackRate:l.playbackRate.value};l=t(u,f),o!==null&&l.start(...o),a!==null&&l.stop(a)}return r.set(u,l),p?await n(u,h.playbackRate,l.playbackRate):await s(u,h.playbackRate,l.playbackRate),await i(h,u,l),l};return{set start(h){o=h},set stop(h){a=h},render(h,u){const l=r.get(u);return l!==void 0?Promise.resolve(l):c(h,u)}}},Va=n=>"playbackRate"in n,Pa=n=>"frequency"in n&&"gain"in n,La=n=>"offset"in n,ja=n=>!("frequency"in n)&&"gain"in n,Wa=n=>"detune"in n&&"frequency"in n,Ba=n=>"pan"in n,Mt=n=>te(Yr,n),Zs=n=>te(Hr,n),ei=(n,t)=>{const{activeInputs:e}=Mt(n);e.forEach(i=>i.forEach(([r])=>{t.includes(n)||ei(r,[...t,n])}));const s=Va(n)?[n.playbackRate]:eo(n)?Array.from(n.parameters.values()):Pa(n)?[n.Q,n.detune,n.frequency,n.gain]:La(n)?[n.offset]:ja(n)?[n.gain]:Wa(n)?[n.detune,n.frequency]:Ba(n)?[n.pan]:[];for(const i of s){const r=Zs(i);r!==void 0&&r.activeInputs.forEach(([o])=>ei(o,t))}fe(n)&&Gs(n)},no=n=>{ei(n.destination,[])},za=n=>n===void 0||typeof n=="number"||typeof n=="string"&&(n==="balanced"||n==="interactive"||n==="playback"),Ua=(n,t,e,s,i,r,o,a,c)=>class extends n{constructor(u={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let l;try{l=new c(u)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?e():d}if(l===null)throw s();if(!za(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&l.sampleRate!==u.sampleRate)throw e();super(l,2);const{latencyHint:p}=u,{sampleRate:f}=l;if(this._baseLatency=typeof l.baseLatency=="number"?l.baseLatency:p==="balanced"?512/f:p==="interactive"||p===void 0?256/f:p==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(p*f/128)))*128/f,this._nativeAudioContext=l,c.name==="webkitAudioContext"?(this._nativeGainNode=l.createGain(),this._nativeOscillatorNode=l.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(l.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,l.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),l.removeEventListener("statechange",d)};l.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),no(this)}))}createMediaElementSource(u){return new i(this,{mediaElement:u})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(u){return new o(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new a(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,l)=>{const p=()=>{this._nativeAudioContext.removeEventListener("statechange",p),this._nativeAudioContext.state==="running"?u():this.resume().then(u,l)};this._nativeAudioContext.addEventListener("statechange",p)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?t():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?t():u})}},Ga=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,u){const l=r(h),p=o(l),f=i(l,u,p),d=p?t(a):null;super(h,!1,f,d),this._isNodeOfNativeOfflineAudioContext=p,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(h){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(h>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=h}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(h){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=h}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},Za=n=>{const t=new WeakMap,e=async(s,i)=>{const r=i.destination;return t.set(i,r),await n(s,i,r),r};return{render(s,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):e(s,i)}}},$a=(n,t,e,s,i,r,o,a)=>(c,h)=>{const u=h.listener,l=()=>{const y=new Float32Array(1),x=t(h,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),b=o(h);let w=!1,N=[0,0,-1,0,1,0],O=[0,0,0];const C=()=>{if(w)return;w=!0;const W=s(h,256,9,0);W.onaudioprocess=({inputBuffer:F})=>{const V=[r(F,y,0),r(F,y,1),r(F,y,2),r(F,y,3),r(F,y,4),r(F,y,5)];V.some((B,Z)=>B!==N[Z])&&(u.setOrientation(...V),N=V);const Q=[r(F,y,6),r(F,y,7),r(F,y,8)];Q.some((B,Z)=>B!==O[Z])&&(u.setPosition(...Q),O=Q)},x.connect(W)},k=W=>F=>{F!==N[W]&&(N[W]=F,u.setOrientation(...N))},R=W=>F=>{F!==O[W]&&(O[W]=F,u.setPosition(...O))},M=(W,F,V)=>{const Q=e(h,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:F});Q.connect(x,0,W),Q.start(),Object.defineProperty(Q.offset,"defaultValue",{get(){return F}});const B=n({context:c},b,Q.offset,Et,qt);return a(B,"value",Z=>()=>Z.call(B),Z=>G=>{try{Z.call(B,G)}catch(K){if(K.code!==9)throw K}C(),b&&V(G)}),B.cancelAndHoldAtTime=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.cancelAndHoldAtTime),B.cancelScheduledValues=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.cancelScheduledValues),B.exponentialRampToValueAtTime=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.exponentialRampToValueAtTime),B.linearRampToValueAtTime=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.linearRampToValueAtTime),B.setTargetAtTime=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.setTargetAtTime),B.setValueAtTime=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.setValueAtTime),B.setValueCurveAtTime=(Z=>b?()=>{throw i()}:(...G)=>{const K=Z.apply(B,G);return C(),K})(B.setValueCurveAtTime),B};return{forwardX:M(0,0,k(0)),forwardY:M(1,0,k(1)),forwardZ:M(2,-1,k(2)),positionX:M(6,0,R(0)),positionY:M(7,0,R(1)),positionZ:M(8,0,R(2)),upX:M(3,0,k(3)),upY:M(4,1,k(4)),upZ:M(5,0,k(5))}},{forwardX:p,forwardY:f,forwardZ:d,positionX:_,positionY:g,positionZ:v,upX:T,upY:S,upZ:A}=u.forwardX===void 0?l():u;return{get forwardX(){return p},get forwardY(){return f},get forwardZ(){return d},get positionX(){return _},get positionY(){return g},get positionZ(){return v},get upX(){return T},get upY(){return S},get upZ(){return A}}},_n=n=>"context"in n,$s=n=>_n(n[0]),Ue=(n,t,e,s)=>{for(const i of n)if(e(i)){if(s)return!1;throw Error("The set contains at least one similar element.")}return n.add(t),!0},Or=(n,t,[e,s],i)=>{Ue(n,[t,e,s],r=>r[0]===t&&r[1]===e,i)},Nr=(n,[t,e,s],i)=>{const r=n.get(t);r===void 0?n.set(t,new Set([[e,s]])):Ue(r,[e,s],o=>o[0]===e,i)},hs=n=>"inputs"in n,gn=(n,t,e,s)=>{if(hs(t)){const i=t.inputs[s];return n.connect(i,e,0),[i,e,0]}return n.connect(t,e,s),[t,e,s]},io=(n,t,e)=>{for(const s of n)if(s[0]===t&&s[1]===e)return n.delete(s),s;return null},Qa=(n,t,e)=>Rn(n,s=>s[0]===t&&s[1]===e),ro=(n,t)=>{if(!Us(n).delete(t))throw new Error("Missing the expected event listener.")},oo=(n,t,e)=>{const s=te(n,t),i=Rn(s,r=>r[0]===e);return s.size===0&&n.delete(t),i},yn=(n,t,e,s)=>{hs(t)?n.disconnect(t.inputs[s],e,0):n.disconnect(t,e,s)},it=n=>te($i,n),xs=n=>te(Qi,n),We=n=>Hn.has(n),un=n=>!Ke.has(n),Er=(n,t)=>new Promise(e=>{if(t!==null)e(!0);else{const s=n.createScriptProcessor(256,1,1),i=n.createGain(),r=n.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=n.createBufferSource();a.buffer=r,a.loop=!0,a.connect(s).connect(n.destination),a.connect(i),a.disconnect(i),s.onaudioprocess=c=>{const h=c.inputBuffer.getChannelData(0);Array.prototype.some.call(h,u=>u===1)?e(!0):e(!1),a.stop(),s.onaudioprocess=null,a.disconnect(s),s.disconnect(n.destination)},a.start()}}),Zn=(n,t)=>{const e=new Map;for(const s of n)for(const i of s){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((s,i)=>t(i,s))},vn=n=>"context"in n,Xa=n=>{const t=new Map;n.connect=(e=>(s,i=0,r=0)=>{const o=vn(s)?e(s,i,r):e(s,i),a=t.get(s);return a===void 0?t.set(s,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(n.connect.bind(n)),n.disconnect=(e=>(s,i,r)=>{if(e.apply(n),s===void 0)t.clear();else if(typeof s=="number")for(const[o,a]of t){const c=a.filter(h=>h.output!==s);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(s))if(i===void 0)t.delete(s);else{const o=t.get(s);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?t.delete(s):t.set(s,a)}}for(const[o,a]of t)a.forEach(c=>{vn(o)?n.connect(o,c.output,c.input):n.connect(o,c.output)})})(n.disconnect)},Ya=(n,t,e,s)=>{const{activeInputs:i,passiveInputs:r}=Zs(t),{outputs:o}=Mt(n),a=Us(n),c=h=>{const u=it(n),l=xs(t);if(h){const p=oo(r,n,e);Or(i,n,p,!1),!s&&!We(n)&&u.connect(l,e)}else{const p=Qa(i,n,e);Nr(r,p,!1),!s&&!We(n)&&u.disconnect(l,e)}};return Ue(o,[t,e],h=>h[0]===t&&h[1]===e,!0)?(a.add(c),fe(n)?Or(i,n,[e,c],!0):Nr(r,[n,e,c],!0),!0):!1},Ha=(n,t,e,s)=>{const{activeInputs:i,passiveInputs:r}=Mt(t),o=io(i[s],n,e);return o===null?[to(r,n,e,s)[2],!1]:[o[2],!0]},Ja=(n,t,e)=>{const{activeInputs:s,passiveInputs:i}=Zs(t),r=io(s,n,e);return r===null?[oo(i,n,e)[1],!1]:[r[2],!0]},Yi=(n,t,e,s,i)=>{const[r,o]=Ha(n,e,s,i);if(r!==null&&(ro(n,r),o&&!t&&!We(n)&&yn(it(n),it(e),s,i)),fe(e)){const{activeInputs:a}=Mt(e);ti(e,a)}},Hi=(n,t,e,s)=>{const[i,r]=Ja(n,e,s);i!==null&&(ro(n,i),r&&!t&&!We(n)&&it(n).disconnect(xs(e),s))},Ka=(n,t)=>{const e=Mt(n),s=[];for(const i of e.outputs)$s(i)?Yi(n,t,...i):Hi(n,t,...i),s.push(i[0]);return e.outputs.clear(),s},tc=(n,t,e)=>{const s=Mt(n),i=[];for(const r of s.outputs)r[1]===e&&($s(r)?Yi(n,t,...r):Hi(n,t,...r),i.push(r[0]),s.outputs.delete(r));return i},ec=(n,t,e,s,i)=>{const r=Mt(n);return Array.from(r.outputs).filter(o=>o[0]===e&&(s===void 0||o[1]===s)&&(i===void 0||o[2]===i)).map(o=>($s(o)?Yi(n,t,...o):Hi(n,t,...o),r.outputs.delete(o),o[0]))},sc=(n,t,e,s,i,r,o,a,c,h,u,l,p,f,d,_)=>class extends h{constructor(v,T,S,A){super(S),this._context=v,this._nativeAudioNode=S;const y=u(v);l(y)&&e(Er,()=>Er(y,_))!==!0&&Xa(S),$i.set(this,S),Jr.set(this,new Set),v.state!=="closed"&&T&&ts(this),n(this,A,S)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(v){this._nativeAudioNode.channelCount=v}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(v){this._nativeAudioNode.channelCountMode=v}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(v){this._nativeAudioNode.channelInterpretation=v}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(v,T=0,S=0){if(T<0||T>=this._nativeAudioNode.numberOfOutputs)throw i();const A=u(this._context),y=d(A);if(p(v)||f(v))throw r();if(_n(v)){const w=it(v);try{const O=gn(this._nativeAudioNode,w,T,S),C=un(this);(y||C)&&this._nativeAudioNode.disconnect(...O),this.context.state!=="closed"&&!C&&un(v)&&ts(v)}catch(O){throw O.code===12?r():O}if(t(this,v,T,S,y)){const O=c([this],v);Zn(O,s(y))}return v}const x=xs(v);if(x.name==="playbackRate"&&x.maxValue===1024)throw o();try{this._nativeAudioNode.connect(x,T),(y||un(this))&&this._nativeAudioNode.disconnect(x,T)}catch(w){throw w.code===12?r():w}if(Ya(this,v,T,y)){const w=c([this],v);Zn(w,s(y))}}disconnect(v,T,S){let A;const y=u(this._context),x=d(y);if(v===void 0)A=Ka(this,x);else if(typeof v=="number"){if(v<0||v>=this.numberOfOutputs)throw i();A=tc(this,x,v)}else{if(T!==void 0&&(T<0||T>=this.numberOfOutputs)||_n(v)&&S!==void 0&&(S<0||S>=v.numberOfInputs))throw i();if(A=ec(this,x,v,T,S),A.length===0)throw r()}for(const b of A){const w=c([this],b);Zn(w,a)}}},nc=(n,t,e,s,i,r,o,a,c,h,u,l,p)=>(f,d,_,g=null,v=null)=>{const T=_.value,S=new pa(T),A=d?s(S):null,y={get defaultValue(){return T},get maxValue(){return g===null?_.maxValue:g},get minValue(){return v===null?_.minValue:v},get value(){return _.value},set value(x){_.value=x,y.setValueAtTime(x,f.context.currentTime)},cancelAndHoldAtTime(x){if(typeof _.cancelAndHoldAtTime=="function")A===null&&S.flush(f.context.currentTime),S.add(i(x)),_.cancelAndHoldAtTime(x);else{const b=Array.from(S).pop();A===null&&S.flush(f.context.currentTime),S.add(i(x));const w=Array.from(S).pop();_.cancelScheduledValues(x),b!==w&&w!==void 0&&(w.type==="exponentialRampToValue"?_.exponentialRampToValueAtTime(w.value,w.endTime):w.type==="linearRampToValue"?_.linearRampToValueAtTime(w.value,w.endTime):w.type==="setValue"?_.setValueAtTime(w.value,w.startTime):w.type==="setValueCurve"&&_.setValueCurveAtTime(w.values,w.startTime,w.duration))}return y},cancelScheduledValues(x){return A===null&&S.flush(f.context.currentTime),S.add(r(x)),_.cancelScheduledValues(x),y},exponentialRampToValueAtTime(x,b){if(x===0)throw new RangeError;if(!Number.isFinite(b)||b<0)throw new RangeError;const w=f.context.currentTime;return A===null&&S.flush(w),Array.from(S).length===0&&(S.add(h(T,w)),_.setValueAtTime(T,w)),S.add(o(x,b)),_.exponentialRampToValueAtTime(x,b),y},linearRampToValueAtTime(x,b){const w=f.context.currentTime;return A===null&&S.flush(w),Array.from(S).length===0&&(S.add(h(T,w)),_.setValueAtTime(T,w)),S.add(a(x,b)),_.linearRampToValueAtTime(x,b),y},setTargetAtTime(x,b,w){return A===null&&S.flush(f.context.currentTime),S.add(c(x,b,w)),_.setTargetAtTime(x,b,w),y},setValueAtTime(x,b){return A===null&&S.flush(f.context.currentTime),S.add(h(x,b)),_.setValueAtTime(x,b),y},setValueCurveAtTime(x,b,w){const N=x instanceof Float32Array?x:new Float32Array(x);if(l!==null&&l.name==="webkitAudioContext"){const O=b+w,C=f.context.sampleRate,k=Math.ceil(b*C),R=Math.floor(O*C),M=R-k,W=new Float32Array(M);for(let V=0;V<M;V+=1){const Q=(N.length-1)/w*((k+V)/C-b),B=Math.floor(Q),Z=Math.ceil(Q);W[V]=B===Z?N[B]:(1-(Q-B))*N[B]+(1-(Z-Q))*N[Z]}A===null&&S.flush(f.context.currentTime),S.add(u(W,b,w)),_.setValueCurveAtTime(W,b,w);const F=R/C;F<O&&p(y,W[W.length-1],F),p(y,N[N.length-1],O)}else A===null&&S.flush(f.context.currentTime),S.add(u(N,b,w)),_.setValueCurveAtTime(N,b,w);return y}};return e.set(y,_),t.set(y,f),n(y,A),y},ic=n=>({replay(t){for(const e of n)if(e.type==="exponentialRampToValue"){const{endTime:s,value:i}=e;t.exponentialRampToValueAtTime(i,s)}else if(e.type==="linearRampToValue"){const{endTime:s,value:i}=e;t.linearRampToValueAtTime(i,s)}else if(e.type==="setTarget"){const{startTime:s,target:i,timeConstant:r}=e;t.setTargetAtTime(i,s,r)}else if(e.type==="setValue"){const{startTime:s,value:i}=e;t.setValueAtTime(i,s)}else if(e.type==="setValueCurve"){const{duration:s,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,s)}else throw new Error("Can't apply an unknown automation.")}});class ao{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((s,i)=>t.call(e,s,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const rc={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},oc=(n,t,e,s,i,r,o,a,c,h,u,l,p,f)=>class extends t{constructor(_,g,v){var T;const S=a(_),A=c(S),y=u({...rc,...v});p(y);const x=Jn.get(S),b=x==null?void 0:x.get(g),w=A||S.state!=="closed"?S:(T=o(S))!==null&&T!==void 0?T:S,N=i(w,A?null:_.baseLatency,h,g,b,y),O=A?s(g,y,b):null;super(_,!0,N,O);const C=[];N.parameters.forEach((R,M)=>{const W=e(this,A,R);C.push([M,W])}),this._nativeAudioWorkletNode=N,this._onprocessorerror=null,this._parameters=new ao(C),A&&n(S,this);const{activeInputs:k}=r(this);l(N,k)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(_){const g=typeof _=="function"?f(this,_):null;this._nativeAudioWorkletNode.onprocessorerror=g;const v=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=v!==null&&v===g?_:v}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function wn(n,t,e,s,i){if(typeof n.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),n.copyFromChannel(t[e],s,i);else{const r=n.getChannelData(s);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const co=(n,t,e,s,i)=>{typeof n.copyToChannel=="function"?t[e].byteLength!==0&&n.copyToChannel(t[e],s,i):t[e].byteLength!==0&&n.getChannelData(s).set(t[e],i)},xn=(n,t)=>{const e=[];for(let s=0;s<n;s+=1){const i=[],r=typeof t=="number"?t:t[s];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},ac=(n,t)=>{const e=te(Kn,n),s=it(t);return te(e,s)},cc=async(n,t,e,s,i,r,o)=>{const a=t===null?Math.ceil(n.context.length/128)*128:t.length,c=s.channelCount*s.numberOfInputs,h=i.reduce((g,v)=>g+v,0),u=h===0?null:e.createBuffer(h,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const l=Mt(n),p=await ac(e,n),f=xn(s.numberOfInputs,s.channelCount),d=xn(s.numberOfOutputs,i),_=Array.from(n.parameters.keys()).reduce((g,v)=>({...g,[v]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(s.numberOfInputs>0&&t!==null)for(let v=0;v<s.numberOfInputs;v+=1)for(let T=0;T<s.channelCount;T+=1)wn(t,f[v],T,T,g);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:v},T)=>{wn(t,_,v,c+T,g)});for(let v=0;v<s.numberOfInputs;v+=1)for(let T=0;T<i[v];T+=1)d[v][T].byteLength===0&&(d[v][T]=new Float32Array(128));try{const v=f.map((S,A)=>l.activeInputs[A].size===0?[]:S),T=o(g/e.sampleRate,e.sampleRate,()=>p.process(v,d,_));if(u!==null)for(let S=0,A=0;S<s.numberOfOutputs;S+=1){for(let y=0;y<i[S];y+=1)co(u,d[S],y,A+y,g);A+=i[S]}if(!T)break}catch(v){n.dispatchEvent(new ErrorEvent("processorerror",{colno:v.colno,filename:v.filename,lineno:v.lineno,message:v.message}));break}}return u},hc=(n,t,e,s,i,r,o,a,c,h,u,l,p,f,d,_)=>(g,v,T)=>{const S=new WeakMap;let A=null;const y=async(x,b)=>{let w=u(x),N=null;const O=Ot(w,b),C=Array.isArray(v.outputChannelCount)?v.outputChannelCount:Array.from(v.outputChannelCount);if(l===null){const k=C.reduce((F,V)=>F+V,0),R=i(b,{channelCount:Math.max(1,k),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,k)}),M=[];for(let F=0;F<x.numberOfOutputs;F+=1)M.push(s(b,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:C[F]}));const W=o(b,{channelCount:v.channelCount,channelCountMode:v.channelCountMode,channelInterpretation:v.channelInterpretation,gain:1});W.connect=t.bind(null,M),W.disconnect=c.bind(null,M),N=[R,M,W]}else O||(w=new l(b,g));if(S.set(b,N===null?w:N[2]),N!==null){if(A===null){if(T===void 0)throw new Error("Missing the processor constructor.");if(p===null)throw new Error("Missing the native OfflineAudioContext constructor.");const V=x.channelCount*x.numberOfInputs,Q=T.parameterDescriptors===void 0?0:T.parameterDescriptors.length,B=V+Q;A=cc(x,B===0?null:await(async()=>{const G=new p(B,Math.ceil(x.context.length/128)*128,b.sampleRate),K=[],Pt=[];for(let rt=0;rt<v.numberOfInputs;rt+=1)K.push(o(G,{channelCount:v.channelCount,channelCountMode:v.channelCountMode,channelInterpretation:v.channelInterpretation,gain:1})),Pt.push(i(G,{channelCount:v.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:v.channelCount}));const Lt=await Promise.all(Array.from(x.parameters.values()).map(async rt=>{const Nt=r(G,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:rt.value});return await f(G,rt,Nt.offset),Nt})),Y=s(G,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,V+Q)});for(let rt=0;rt<v.numberOfInputs;rt+=1){K[rt].connect(Pt[rt]);for(let Nt=0;Nt<v.channelCount;Nt+=1)Pt[rt].connect(Y,Nt,rt*v.channelCount+Nt)}for(const[rt,Nt]of Lt.entries())Nt.connect(Y,0,V+rt),Nt.start(0);return Y.connect(G.destination),await Promise.all(K.map(rt=>d(x,G,rt))),_(G)})(),b,v,C,T,h)}const k=await A,R=e(b,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[M,W,F]=N;k!==null&&(R.buffer=k,R.start(0)),R.connect(M);for(let V=0,Q=0;V<x.numberOfOutputs;V+=1){const B=W[V];for(let Z=0;Z<C[V];Z+=1)M.connect(B,Q+Z,Z);Q+=C[V]}return F}if(O)for(const[k,R]of x.parameters.entries())await n(b,R,w.parameters.get(k));else for(const[k,R]of x.parameters.entries())await f(b,R,w.parameters.get(k));return await d(x,b,w),w};return{render(x,b){a(b,x);const w=S.get(b);return w!==void 0?Promise.resolve(w):y(x,b)}}},uc=(n,t,e,s,i,r,o,a,c,h,u,l,p,f,d,_,g,v,T,S)=>class extends d{constructor(y,x){super(y,x),this._nativeContext=y,this._audioWorklet=n===void 0?void 0:{addModule:(b,w)=>n(this,b,w)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(y,x,b){return new e({length:x,numberOfChannels:y,sampleRate:b})}createBufferSource(){return new s(this)}createChannelMerger(y=6){return new r(this,{numberOfInputs:y})}createChannelSplitter(y=6){return new o(this,{numberOfOutputs:y})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(y=1){return new u(this,{maxDelayTime:y})}createDynamicsCompressor(){return new l(this)}createGain(){return new p(this)}createIIRFilter(y,x){return new f(this,{feedback:x,feedforward:y})}createOscillator(){return new _(this)}createPanner(){return new g(this)}createPeriodicWave(y,x,b={disableNormalization:!1}){return new v(this,{...b,imag:x,real:y})}createStereoPanner(){return new T(this)}createWaveShaper(){return new S(this)}decodeAudioData(y,x,b){return h(this._nativeContext,y).then(w=>(typeof x=="function"&&x(w),w),w=>{throw typeof b=="function"&&b(w),w})}},lc={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},dc=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,u){const l=r(h),p={...lc,...u},f=i(l,p),d=o(l),_=d?e():null;super(h,!1,f,_),this._Q=t(this,d,f.Q,Et,qt),this._detune=t(this,d,f.detune,1200*Math.log2(Et),-1200*Math.log2(Et)),this._frequency=t(this,d,f.frequency,h.sampleRate/2,0),this._gain=t(this,d,f.gain,40*Math.log10(Et),qt),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(h){this._nativeBiquadFilterNode.type=h}getFrequencyResponse(h,u,l){try{this._nativeBiquadFilterNode.getFrequencyResponse(h,u,l)}catch(p){throw p.code===11?s():p}if(h.length!==u.length||u.length!==l.length)throw s()}},pc=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const u=Ot(h,c);if(!u){const l={Q:h.Q.value,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,gain:h.gain.value,type:h.type};h=t(c,l)}return r.set(c,h),u?(await n(c,a.Q,h.Q),await n(c,a.detune,h.detune),await n(c,a.frequency,h.frequency),await n(c,a.gain,h.gain)):(await s(c,a.Q,h.Q),await s(c,a.detune,h.detune),await s(c,a.frequency,h.frequency),await s(c,a.gain,h.gain)),await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},fc=(n,t)=>(e,s)=>{const i=t.get(e);if(i!==void 0)return i;const r=n.get(e);if(r!==void 0)return r;try{const o=s();return o instanceof Promise?(n.set(e,o),o.catch(()=>!1).then(a=>(n.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},mc={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},_c=(n,t,e,s,i)=>class extends n{constructor(o,a){const c=s(o),h={...mc,...a},u=e(c,h),l=i(c)?t():null;super(o,!1,u,l)}},gc=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Ot(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=n(o,h)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},yc={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},vc=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=s(a),u=r({...yc,...c}),l=e(h,u),p=i(h)?t():null;super(a,!1,l,p)}},wc=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Ot(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=n(o,h)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},xc=n=>(t,e,s)=>n(e,t,s),bc=n=>(t,e,s=0,i=0)=>{const r=t[s];if(r===void 0)throw n();return vn(e)?r.connect(e,0,i):r.connect(e,0)},Tc=n=>(t,e)=>{const s=n(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return s.buffer=i,s.loop=!0,s.connect(e),s.start(),()=>{s.stop(),s.disconnect(e)}},Sc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},kc=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const u=i(c),l={...Sc,...h},p=s(u,l),f=r(u),d=f?e():null;super(c,!1,p,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=p,this._offset=t(this,f,p.offset,Et,qt),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const h=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=h;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===h?c:u}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){ts(this);const h=()=>{this._nativeConstantSourceNode.removeEventListener("ended",h),fe(this)&&Gs(this)};this._nativeConstantSourceNode.addEventListener("ended",h)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},Dc=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(h,u)=>{let l=e(h);const p=Ot(l,u);if(!p){const f={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,offset:l.offset.value};l=t(u,f),o!==null&&l.start(o),a!==null&&l.stop(a)}return r.set(u,l),p?await n(u,h.offset,l.offset):await s(u,h.offset,l.offset),await i(h,u,l),l};return{set start(h){o=h},set stop(h){a=h},render(h,u){const l=r.get(u);return l!==void 0?Promise.resolve(l):c(h,u)}}},Ac=n=>t=>(n[0]=t,n[0]),Cc={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Oc=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=s(a),u={...Cc,...c},l=e(h,u),f=i(h)?t():null;super(a,!1,l,f),this._isBufferNullified=!1,this._nativeConvolverNode=l,u.buffer!==null&&r(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},Nc=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Ot(a,o)){const h={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=n(o,h)}return s.set(o,a),hs(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Ec=(n,t)=>(e,s,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,s,i)}catch(r){throw r.name==="SyntaxError"?n():r}},Mc=()=>new DOMException("","DataCloneError"),Mr=n=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(s=>{const i=()=>{e.onmessage=null,t.close(),e.close(),s()};e.onmessage=()=>i();try{t.postMessage(n,[n])}catch{}finally{i()}})},Rc=(n,t,e,s,i,r,o,a,c,h,u)=>(l,p)=>{const f=o(l)?l:r(l);if(i.has(p)){const d=e();return Promise.reject(d)}try{i.add(p)}catch{}return t(c,()=>c(f))?f.decodeAudioData(p).then(d=>(Mr(p).catch(()=>{}),t(a,()=>a(d))||u(d),n.add(d),d)):new Promise((d,_)=>{const g=async()=>{try{await Mr(p)}catch{}},v=T=>{_(T),g()};try{f.decodeAudioData(p,T=>{typeof T.copyFromChannel!="function"&&(h(T),Xi(T)),n.add(T),g().then(()=>d(T))},T=>{v(T===null?s():T)})}catch(T){v(T)}})},Ic=(n,t,e,s,i,r,o,a)=>(c,h)=>{const u=t.get(c);if(u===void 0)throw new Error("Missing the expected cycle count.");const l=r(c.context),p=a(l);if(u===h){if(t.delete(c),!p&&o(c)){const f=s(c),{outputs:d}=e(c);for(const _ of d)if($s(_)){const g=s(_[0]);n(f,g,_[1],_[2])}else{const g=i(_[0]);f.connect(g,_[1])}}}else t.set(c,u-h)},qc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},Fc=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const u=i(c),l={...qc,...h},p=s(u,l),f=r(u),d=f?e(l.maxDelayTime):null;super(c,!1,p,d),this._delayTime=t(this,f,p.delayTime),o(this,l.maxDelayTime)}get delayTime(){return this._delayTime}},Vc=(n,t,e,s,i)=>r=>{const o=new WeakMap,a=async(c,h)=>{let u=e(c);const l=Ot(u,h);if(!l){const p={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:r};u=t(h,p)}return o.set(h,u),l?await n(h,c.delayTime,u.delayTime):await s(h,c.delayTime,u.delayTime),await i(c,h,u),u};return{render(c,h){const u=o.get(h);return u!==void 0?Promise.resolve(u):a(c,h)}}},Pc=n=>(t,e,s,i)=>n(t[i],r=>r[0]===e&&r[1]===s),Lc=n=>(t,e)=>{n(t).delete(e)},jc=n=>"delayTime"in n,Wc=(n,t,e)=>function s(i,r){const o=_n(r)?r:e(n,r);if(jc(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>s([...i,o],c[0])).reduce((c,h)=>c.concat(h),[])},an=(n,t,e)=>{const s=t[e];if(s===void 0)throw n();return s},Bc=n=>(t,e=void 0,s=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?an(n,t,e).disconnect():vn(e)?s===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?an(n,t,s).disconnect(e,0):an(n,t,s).disconnect(e,0,i):s===void 0?t.forEach(r=>r.disconnect(e)):an(n,t,s).disconnect(e,0),zc={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Uc=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,u){const l=r(h),p={...zc,...u},f=s(l,p),d=o(l),_=d?e():null;super(h,!1,f,_),this._attack=t(this,d,f.attack),this._knee=t(this,d,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,d,f.ratio),this._release=t(this,d,f.release),this._threshold=t(this,d,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(h){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=h,h>2)throw this._nativeDynamicsCompressorNode.channelCount=u,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(h){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=h,h==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},Gc=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const u=Ot(h,c);if(!u){const l={attack:h.attack.value,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,knee:h.knee.value,ratio:h.ratio.value,release:h.release.value,threshold:h.threshold.value};h=t(c,l)}return r.set(c,h),u?(await n(c,a.attack,h.attack),await n(c,a.knee,h.knee),await n(c,a.ratio,h.ratio),await n(c,a.release,h.release),await n(c,a.threshold,h.threshold)):(await s(c,a.attack,h.attack),await s(c,a.knee,h.knee),await s(c,a.ratio,h.ratio),await s(c,a.release,h.release),await s(c,a.threshold,h.threshold)),await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},Zc=()=>new DOMException("","EncodingError"),$c=n=>t=>new Promise((e,s)=>{if(n===null){s(new SyntaxError);return}const i=n.document.head;if(i===null)s(new SyntaxError);else{const r=n.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=n.onerror,h=()=>{n.onerror=c,URL.revokeObjectURL(a)};n.onerror=(u,l,p,f,d)=>{if(l===a||l===n.location.href&&p===1&&f===1)return h(),s(d),!1;if(c!==null)return c(u,l,p,f,d)},r.onerror=()=>{h(),s(new SyntaxError)},r.onload=()=>{h(),e()},r.src=a,r.type="module",i.appendChild(r)}}),Qc=n=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,s,i){if(s!==null){let r=this._listeners.get(s);r===void 0&&(r=n(this,s),typeof s=="function"&&this._listeners.set(s,r)),this._nativeEventTarget.addEventListener(e,r,i)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,s,i){const r=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,i)}},Xc=n=>(t,e,s)=>{Object.defineProperties(n,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return s()}finally{n!==null&&(delete n.currentFrame,delete n.currentTime)}},Yc=n=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw n()},Hc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Jc=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=i(a),u={...Hc,...c},l=s(h,u),p=r(h),f=p?e():null;super(a,!1,l,f),this._gain=t(this,p,l.gain,Et,qt)}get gain(){return this._gain}},Kc=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const u=Ot(h,c);if(!u){const l={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,gain:h.gain.value};h=t(c,l)}return r.set(c,h),u?await n(c,a.gain,h.gain):await s(c,a.gain,h.gain),await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},th=(n,t)=>e=>t(n,e),eh=n=>t=>{const e=n(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},sh=n=>t=>{var e;return(e=n.get(t))!==null&&e!==void 0?e:0},nh=n=>t=>{const e=n(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},ih=n=>t=>n.get(t),xt=()=>new DOMException("","InvalidStateError"),rh=n=>t=>{const e=n.get(t);if(e===void 0)throw xt();return e},oh=(n,t)=>e=>{let s=n.get(e);if(s!==void 0)return s;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new t(1,1,44100),n.set(e,s),s},ah=n=>t=>{const e=n.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},In=()=>new DOMException("","InvalidAccessError"),ch=n=>{n.getFrequencyResponse=(t=>(e,s,i)=>{if(e.length!==s.length||s.length!==i.length)throw In();return t.call(n,e,s,i)})(n.getFrequencyResponse)},hh={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},uh=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=s(a),u=i(h),l={...hh,...c},p=t(h,u?null:a.baseLatency,l),f=u?e(l.feedback,l.feedforward):null;super(a,!1,p,f),ch(p),this._nativeIIRFilterNode=p,r(this,1)}getFrequencyResponse(a,c,h){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,h)}},ho=(n,t,e,s,i,r,o,a,c,h,u)=>{const l=h.length;let p=a;for(let f=0;f<l;f+=1){let d=e[0]*h[f];for(let _=1;_<i;_+=1){const g=p-_&c-1;d+=e[_]*r[g],d-=n[_]*o[g]}for(let _=i;_<s;_+=1)d+=e[_]*r[p-_&c-1];for(let _=i;_<t;_+=1)d-=n[_]*o[p-_&c-1];r[p]=h[f],o[p]=d,p=p+1&c-1,u[f]=d}return p},lh=(n,t,e,s)=>{const i=e instanceof Float64Array?e:new Float64Array(e),r=s instanceof Float64Array?s:new Float64Array(s),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let d=0;d<o;d+=1)r[d]/=i[0];for(let d=1;d<a;d+=1)i[d]/=i[0]}const h=32,u=new Float32Array(h),l=new Float32Array(h),p=t.createBuffer(n.numberOfChannels,n.length,n.sampleRate),f=n.numberOfChannels;for(let d=0;d<f;d+=1){const _=n.getChannelData(d),g=p.getChannelData(d);u.fill(0),l.fill(0),ho(i,o,r,a,c,u,l,0,h,_,g)}return p},dh=(n,t,e,s,i)=>(r,o)=>{const a=new WeakMap;let c=null;const h=async(u,l)=>{let p=null,f=t(u);const d=Ot(f,l);if(l.createIIRFilter===void 0?p=n(l,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(f=l.createIIRFilter(o,r)),a.set(l,p===null?f:p),p!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new e(u.context.destination.channelCount,u.context.length,l.sampleRate);c=(async()=>{await s(u,g,g.destination);const v=await i(g);return lh(v,l,r,o)})()}const _=await c;return p.buffer=_,p.start(0),p}return await s(u,l,f),f};return{render(u,l){const p=a.get(l);return p!==void 0?Promise.resolve(p):h(u,l)}}},ph=(n,t,e,s,i,r)=>o=>(a,c)=>{const h=n.get(a);if(h===void 0){if(!o&&r(a)){const u=s(a),{outputs:l}=e(a);for(const p of l)if($s(p)){const f=s(p[0]);t(u,f,p[1],p[2])}else{const f=i(p[0]);u.disconnect(f,p[1])}}n.set(a,c)}else n.set(a,h+c)},fh=(n,t)=>e=>{const s=n.get(e);return t(s)||t(e)},mh=(n,t)=>e=>n.has(e)||t(e),_h=(n,t)=>e=>n.has(e)||t(e),gh=(n,t)=>e=>{const s=n.get(e);return t(s)||t(e)},yh=n=>t=>n!==null&&t instanceof n,vh=n=>t=>n!==null&&typeof n.AudioNode=="function"&&t instanceof n.AudioNode,wh=n=>t=>n!==null&&typeof n.AudioParam=="function"&&t instanceof n.AudioParam,xh=(n,t)=>e=>n(e)||t(e),bh=n=>t=>n!==null&&t instanceof n,Th=n=>n!==null&&n.isSecureContext,Sh=async(n,t,e,s,i,r,o,a,c,h,u,l,p,f,d,_)=>n(t,t)&&n(e,e)&&n(i,i)&&n(r,r)&&n(a,a)&&n(c,c)&&n(h,h)&&n(u,u)&&n(l,l)&&n(p,p)&&n(f,f)?(await Promise.all([n(s,s),n(o,o),n(d,d),n(_,_)])).every(v=>v):!1,kh=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r),c=t(a,o);if(s(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},Dh={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},Ah=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r);if(s(a))throw new TypeError;const c={...Dh,...o},h=t(a,c);super(r,!1,h,null),this._nativeMediaStreamAudioDestinationNode=h}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},Ch=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r),c=t(a,o);if(s(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},Oh=(n,t,e)=>class extends n{constructor(i,r){const o=e(i),a=t(o,r);super(i,!0,a,null)}},Nh=(n,t,e,s,i,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,Mn.set(this,a),s(a)&&i.set(a,new Set),this._destination=new n(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const h=this._nativeContext.onstatechange;this._onstatechange=h!==null&&h===c?a:h}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},bs=n=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=n.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},Eh=(n,t)=>(e,s,i)=>{const r=new Set;return e.connect=(o=>(a,c=0,h=0)=>{const u=r.size===0;if(t(a))return o.call(e,a,c,h),n(r,[a,c,h],l=>l[0]===a&&l[1]===c&&l[2]===h,!0),u&&s(),a;o.call(e,a,c),n(r,[a,c],l=>l[0]===a&&l[1]===c,!0),u&&s()})(e.connect),e.disconnect=(o=>(a,c,h)=>{const u=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const p of r)p[1]===a&&r.delete(p)}else{t(a)?o.call(e,a,c,h):o.call(e,a,c);for(const p of r)p[0]===a&&(c===void 0||p[1]===c)&&(h===void 0||p[2]===h)&&r.delete(p)}const l=r.size===0;u&&l&&i()})(e.disconnect),e},ot=(n,t,e)=>{const s=t[e];s!==void 0&&s!==n[e]&&(n[e]=s)},yt=(n,t)=>{ot(n,t,"channelCount"),ot(n,t,"channelCountMode"),ot(n,t,"channelInterpretation")},Rr=n=>typeof n.getFloatTimeDomainData=="function",Mh=n=>{n.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);n.getByteTimeDomainData(e);const s=Math.max(e.length,n.fftSize);for(let i=0;i<s;i+=1)t[i]=(e[i]-128)*.0078125;return t}},Rh=(n,t)=>(e,s)=>{const i=e.createAnalyser();if(yt(i,s),!(s.maxDecibels>s.minDecibels))throw t();return ot(i,s,"fftSize"),ot(i,s,"maxDecibels"),ot(i,s,"minDecibels"),ot(i,s,"smoothingTimeConstant"),n(Rr,()=>Rr(i))||Mh(i),i},Ih=n=>n===null?null:n.hasOwnProperty("AudioBuffer")?n.AudioBuffer:null,dt=(n,t,e)=>{const s=t[e];s!==void 0&&s!==n[e].value&&(n[e].value=s)},qh=n=>{n.start=(t=>{let e=!1;return(s=0,i=0,r)=>{if(e)throw xt();t.call(n,s,i,r),e=!0}})(n.start)},Ji=n=>{n.start=(t=>(e=0,s=0,i)=>{if(typeof i=="number"&&i<0||s<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(n,e,s,i)})(n.start)},Ki=n=>{n.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(n,e)})(n.stop)},Fh=(n,t,e,s,i,r,o,a,c,h,u)=>(l,p)=>{const f=l.createBufferSource();return yt(f,p),dt(f,p,"playbackRate"),ot(f,p,"buffer"),ot(f,p,"loop"),ot(f,p,"loopEnd"),ot(f,p,"loopStart"),t(e,()=>e(l))||qh(f),t(s,()=>s(l))||c(f),t(i,()=>i(l))||h(f,l),t(r,()=>r(l))||Ji(f),t(o,()=>o(l))||u(f,l),t(a,()=>a(l))||Ki(f),n(l,f),f},Vh=n=>n===null?null:n.hasOwnProperty("AudioContext")?n.AudioContext:n.hasOwnProperty("webkitAudioContext")?n.webkitAudioContext:null,Ph=(n,t)=>(e,s,i)=>{const r=e.destination;if(r.channelCount!==s)try{r.channelCount=s}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:s});const o=n(e,{channelCount:s,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(h){if(c>r.maxChannelCount)throw h}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},Lh=n=>n===null?null:n.hasOwnProperty("AudioWorkletNode")?n.AudioWorkletNode:null,jh=n=>{const{port1:t}=new MessageChannel;try{t.postMessage(n)}finally{t.close()}},Wh=(n,t,e,s,i)=>(r,o,a,c,h,u)=>{if(a!==null)try{const l=new a(r,c,u),p=new Map;let f=null;if(Object.defineProperties(l,{channelCount:{get:()=>u.channelCount,set:()=>{throw n()}},channelCountMode:{get:()=>"explicit",set:()=>{throw n()}},onprocessorerror:{get:()=>f,set:d=>{typeof f=="function"&&l.removeEventListener("processorerror",f),f=typeof d=="function"?d:null,typeof f=="function"&&l.addEventListener("processorerror",f)}}}),l.addEventListener=(d=>(..._)=>{if(_[0]==="processorerror"){const g=typeof _[1]=="function"?_[1]:typeof _[1]=="object"&&_[1]!==null&&typeof _[1].handleEvent=="function"?_[1].handleEvent:null;if(g!==null){const v=p.get(_[1]);v!==void 0?_[1]=v:(_[1]=T=>{T.type==="error"?(Object.defineProperties(T,{type:{value:"processorerror"}}),g(T)):g(new ErrorEvent(_[0],{...T}))},p.set(g,_[1]))}}return d.call(l,"error",_[1],_[2]),d.call(l,..._)})(l.addEventListener),l.removeEventListener=(d=>(..._)=>{if(_[0]==="processorerror"){const g=p.get(_[1]);g!==void 0&&(p.delete(_[1]),_[1]=g)}return d.call(l,"error",_[1],_[2]),d.call(l,_[0],_[1],_[2])})(l.removeEventListener),u.numberOfOutputs!==0){const d=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return l.connect(d).connect(r.destination),i(l,()=>d.disconnect(),()=>d.connect(r.destination))}return l}catch(l){throw l.code===11?s():l}if(h===void 0)throw s();return jh(u),t(r,o,h,u)},uo=(n,t)=>n===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(n*t))))),Bh=n=>new Promise((t,e)=>{const{port1:s,port2:i}=new MessageChannel;s.onmessage=({data:r})=>{s.close(),i.close(),t(r)},s.onmessageerror=({data:r})=>{s.close(),i.close(),e(r)},i.postMessage(n)}),zh=async(n,t)=>{const e=await Bh(t);return new n(e)},Uh=(n,t,e,s)=>{let i=Kn.get(n);i===void 0&&(i=new WeakMap,Kn.set(n,i));const r=zh(e,s);return i.set(t,r),r},Gh=(n,t,e,s,i,r,o,a,c,h,u,l,p)=>(f,d,_,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw c();const v=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(v.some(E=>E<1))throw c();if(v.length!==g.numberOfOutputs)throw t();if(g.channelCountMode!=="explicit")throw c();const T=g.channelCount*g.numberOfInputs,S=v.reduce((E,U)=>E+U,0),A=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length;if(T+A>6||S>6)throw c();const y=new MessageChannel,x=[],b=[];for(let E=0;E<g.numberOfInputs;E+=1)x.push(o(f,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),b.push(i(f,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const w=[];if(_.parameterDescriptors!==void 0)for(const{defaultValue:E,maxValue:U,minValue:_t,name:ut}of _.parameterDescriptors){const J=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[ut]!==void 0?g.parameterData[ut]:E===void 0?0:E});Object.defineProperties(J.offset,{defaultValue:{get:()=>E===void 0?0:E},maxValue:{get:()=>U===void 0?Et:U},minValue:{get:()=>_t===void 0?qt:_t}}),w.push(J)}const N=s(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,T+A)}),O=uo(d,f.sampleRate),C=a(f,O,T+A,Math.max(1,S)),k=i(f,{channelCount:Math.max(1,S),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,S)}),R=[];for(let E=0;E<g.numberOfOutputs;E+=1)R.push(s(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:v[E]}));for(let E=0;E<g.numberOfInputs;E+=1){x[E].connect(b[E]);for(let U=0;U<g.channelCount;U+=1)b[E].connect(N,U,E*g.channelCount+U)}const M=new ao(_.parameterDescriptors===void 0?[]:_.parameterDescriptors.map(({name:E},U)=>{const _t=w[U];return _t.connect(N,0,T+U),_t.start(0),[E,_t.offset]}));N.connect(C);let W=g.channelInterpretation,F=null;const V=g.numberOfOutputs===0?[C]:R,Q={get bufferSize(){return O},get channelCount(){return g.channelCount},set channelCount(E){throw e()},get channelCountMode(){return g.channelCountMode},set channelCountMode(E){throw e()},get channelInterpretation(){return W},set channelInterpretation(E){for(const U of x)U.channelInterpretation=E;W=E},get context(){return C.context},get inputs(){return x},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return F},set onprocessorerror(E){typeof F=="function"&&Q.removeEventListener("processorerror",F),F=typeof E=="function"?E:null,typeof F=="function"&&Q.addEventListener("processorerror",F)},get parameters(){return M},get port(){return y.port2},addEventListener(...E){return C.addEventListener(E[0],E[1],E[2])},connect:n.bind(null,V),disconnect:h.bind(null,V),dispatchEvent(...E){return C.dispatchEvent(E[0])},removeEventListener(...E){return C.removeEventListener(E[0],E[1],E[2])}},B=new Map;y.port1.addEventListener=(E=>(...U)=>{if(U[0]==="message"){const _t=typeof U[1]=="function"?U[1]:typeof U[1]=="object"&&U[1]!==null&&typeof U[1].handleEvent=="function"?U[1].handleEvent:null;if(_t!==null){const ut=B.get(U[1]);ut!==void 0?U[1]=ut:(U[1]=J=>{u(f.currentTime,f.sampleRate,()=>_t(J))},B.set(_t,U[1]))}}return E.call(y.port1,U[0],U[1],U[2])})(y.port1.addEventListener),y.port1.removeEventListener=(E=>(...U)=>{if(U[0]==="message"){const _t=B.get(U[1]);_t!==void 0&&(B.delete(U[1]),U[1]=_t)}return E.call(y.port1,U[0],U[1],U[2])})(y.port1.removeEventListener);let Z=null;Object.defineProperty(y.port1,"onmessage",{get:()=>Z,set:E=>{typeof Z=="function"&&y.port1.removeEventListener("message",Z),Z=typeof E=="function"?E:null,typeof Z=="function"&&(y.port1.addEventListener("message",Z),y.port1.start())}}),_.prototype.port=y.port1;let G=null;Uh(f,Q,_,g).then(E=>G=E);const Pt=xn(g.numberOfInputs,g.channelCount),Lt=xn(g.numberOfOutputs,v),Y=_.parameterDescriptors===void 0?[]:_.parameterDescriptors.reduce((E,{name:U})=>({...E,[U]:new Float32Array(128)}),{});let rt=!0;const Nt=()=>{g.numberOfOutputs>0&&C.disconnect(k);for(let E=0,U=0;E<g.numberOfOutputs;E+=1){const _t=R[E];for(let ut=0;ut<v[E];ut+=1)k.disconnect(_t,U+ut,ut);U+=v[E]}},j=new Map;C.onaudioprocess=({inputBuffer:E,outputBuffer:U})=>{if(G!==null){const _t=l(Q);for(let ut=0;ut<O;ut+=128){for(let J=0;J<g.numberOfInputs;J+=1)for(let lt=0;lt<g.channelCount;lt+=1)wn(E,Pt[J],lt,lt,ut);_.parameterDescriptors!==void 0&&_.parameterDescriptors.forEach(({name:J},lt)=>{wn(E,Y,J,T+lt,ut)});for(let J=0;J<g.numberOfInputs;J+=1)for(let lt=0;lt<v[J];lt+=1)Lt[J][lt].byteLength===0&&(Lt[J][lt]=new Float32Array(128));try{const J=Pt.map((Zt,be)=>{if(_t[be].size>0)return j.set(be,O/128),Zt;const Gn=j.get(be);return Gn===void 0?[]:(Zt.every(ha=>ha.every(ua=>ua===0))&&(Gn===1?j.delete(be):j.set(be,Gn-1)),Zt)});rt=u(f.currentTime+ut/f.sampleRate,f.sampleRate,()=>G.process(J,Lt,Y));for(let Zt=0,be=0;Zt<g.numberOfOutputs;Zt+=1){for(let gs=0;gs<v[Zt];gs+=1)co(U,Lt[Zt],gs,be+gs,ut);be+=v[Zt]}}catch(J){rt=!1,Q.dispatchEvent(new ErrorEvent("processorerror",{colno:J.colno,filename:J.filename,lineno:J.lineno,message:J.message}))}if(!rt){for(let J=0;J<g.numberOfInputs;J+=1){x[J].disconnect(b[J]);for(let lt=0;lt<g.channelCount;lt+=1)b[ut].disconnect(N,lt,J*g.channelCount+lt)}if(_.parameterDescriptors!==void 0){const J=_.parameterDescriptors.length;for(let lt=0;lt<J;lt+=1){const Zt=w[lt];Zt.disconnect(N,0,T+lt),Zt.stop()}}N.disconnect(C),C.onaudioprocess=null,Fe?Nt():Qe();break}}}};let Fe=!1;const Ve=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),$e=()=>C.connect(Ve).connect(f.destination),Qe=()=>{C.disconnect(Ve),Ve.disconnect()},aa=()=>{if(rt){Qe(),g.numberOfOutputs>0&&C.connect(k);for(let E=0,U=0;E<g.numberOfOutputs;E+=1){const _t=R[E];for(let ut=0;ut<v[E];ut+=1)k.connect(_t,U+ut,ut);U+=v[E]}}Fe=!0},ca=()=>{rt&&($e(),Nt()),Fe=!1};return $e(),p(Q,aa,ca)},lo=(n,t)=>{const e=n.createBiquadFilter();return yt(e,t),dt(e,t,"Q"),dt(e,t,"detune"),dt(e,t,"frequency"),dt(e,t,"gain"),ot(e,t,"type"),e},Zh=(n,t)=>(e,s)=>{const i=e.createChannelMerger(s.numberOfInputs);return n!==null&&n.name==="webkitAudioContext"&&t(e,i),yt(i,s),i},$h=n=>{const t=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw xt()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw xt()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw xt()}})},Qs=(n,t)=>{const e=n.createChannelSplitter(t.numberOfOutputs);return yt(e,t),$h(e),e},Qh=(n,t,e,s,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return yt(a,o),dt(a,o,"offset"),t(s,()=>s(r))||Ji(a),t(i,()=>i(r))||Ki(a),n(r,a),a},us=(n,t)=>(n.connect=t.connect.bind(t),n.disconnect=t.disconnect.bind(t),n),Xh=(n,t,e,s)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),h=e(i,{...o,gain:r}),u=a.getChannelData(0);u[0]=1,u[1]=1,c.buffer=a,c.loop=!0;const l={get bufferSize(){},get channelCount(){return h.channelCount},set channelCount(d){h.channelCount=d},get channelCountMode(){return h.channelCountMode},set channelCountMode(d){h.channelCountMode=d},get channelInterpretation(){return h.channelInterpretation},set channelInterpretation(d){h.channelInterpretation=d},get context(){return h.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return h.numberOfOutputs},get offset(){return h.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},p=()=>c.connect(h),f=()=>c.disconnect(h);return n(i,c),s(us(l,h),p,f)},Yh=(n,t)=>(e,s)=>{const i=e.createConvolver();if(yt(i,s),s.disableNormalization===i.normalize&&(i.normalize=!s.disableNormalization),ot(i,s,"buffer"),s.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw n();return r.call(i,o)}),s.channelCountMode==="max"))throw n();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw n();return r.call(i,o)}),i},po=(n,t)=>{const e=n.createDelay(t.maxDelayTime);return yt(e,t),dt(e,t,"delayTime"),e},Hh=n=>(t,e)=>{const s=t.createDynamicsCompressor();if(yt(s,e),e.channelCount>2||e.channelCountMode==="max")throw n();return dt(s,e,"attack"),dt(s,e,"knee"),dt(s,e,"ratio"),dt(s,e,"release"),dt(s,e,"threshold"),s},Vt=(n,t)=>{const e=n.createGain();return yt(e,t),dt(e,t,"gain"),e},Jh=n=>(t,e,s)=>{if(t.createIIRFilter===void 0)return n(t,e,s);const i=t.createIIRFilter(s.feedforward,s.feedback);return yt(i,s),i};function Kh(n,t){const e=t[0]*t[0]+t[1]*t[1];return[(n[0]*t[0]+n[1]*t[1])/e,(n[1]*t[0]-n[0]*t[1])/e]}function tu(n,t){return[n[0]*t[0]-n[1]*t[1],n[0]*t[1]+n[1]*t[0]]}function Ir(n,t){let e=[0,0];for(let s=n.length-1;s>=0;s-=1)e=tu(e,t),e[0]+=n[s];return e}const eu=(n,t,e,s)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:h,feedforward:u})=>{const l=uo(r,i.sampleRate),p=h instanceof Float64Array?h:new Float64Array(h),f=u instanceof Float64Array?u:new Float64Array(u),d=p.length,_=f.length,g=Math.min(d,_);if(d===0||d>20)throw s();if(p[0]===0)throw t();if(_===0||_>20)throw s();if(f[0]===0)throw t();if(p[0]!==1){for(let w=0;w<_;w+=1)f[w]/=p[0];for(let w=1;w<d;w+=1)p[w]/=p[0]}const v=e(i,l,o,o);v.channelCount=o,v.channelCountMode=a,v.channelInterpretation=c;const T=32,S=[],A=[],y=[];for(let w=0;w<o;w+=1){S.push(0);const N=new Float32Array(T),O=new Float32Array(T);N.fill(0),O.fill(0),A.push(N),y.push(O)}v.onaudioprocess=w=>{const N=w.inputBuffer,O=w.outputBuffer,C=N.numberOfChannels;for(let k=0;k<C;k+=1){const R=N.getChannelData(k),M=O.getChannelData(k);S[k]=ho(p,d,f,_,g,A[k],y[k],S[k],T,R,M)}};const x=i.sampleRate/2;return us({get bufferSize(){return l},get channelCount(){return v.channelCount},set channelCount(w){v.channelCount=w},get channelCountMode(){return v.channelCountMode},set channelCountMode(w){v.channelCountMode=w},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(w){v.channelInterpretation=w},get context(){return v.context},get inputs(){return[v]},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},addEventListener(...w){return v.addEventListener(w[0],w[1],w[2])},dispatchEvent(...w){return v.dispatchEvent(w[0])},getFrequencyResponse(w,N,O){if(w.length!==N.length||N.length!==O.length)throw n();const C=w.length;for(let k=0;k<C;k+=1){const R=-Math.PI*(w[k]/x),M=[Math.cos(R),Math.sin(R)],W=Ir(f,M),F=Ir(p,M),V=Kh(W,F);N[k]=Math.sqrt(V[0]*V[0]+V[1]*V[1]),O[k]=Math.atan2(V[1],V[0])}},removeEventListener(...w){return v.removeEventListener(w[0],w[1],w[2])}},v)},su=(n,t)=>n.createMediaElementSource(t.mediaElement),nu=(n,t)=>{const e=n.createMediaStreamDestination();return yt(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},iu=(n,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const s=e.slice(0,1),i=n.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(i,"mediaStream",{value:t}),i},ru=(n,t)=>(e,{mediaStreamTrack:s})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(s);const i=new MediaStream([s]),r=e.createMediaStreamSource(i);if(s.kind!=="audio")throw n();if(t(e))throw new TypeError;return r},ou=n=>n===null?null:n.hasOwnProperty("OfflineAudioContext")?n.OfflineAudioContext:n.hasOwnProperty("webkitOfflineAudioContext")?n.webkitOfflineAudioContext:null,au=(n,t,e,s,i,r)=>(o,a)=>{const c=o.createOscillator();return yt(c,a),dt(c,a,"detune"),dt(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):ot(c,a,"type"),t(e,()=>e(o))||Ji(c),t(s,()=>s(o))||r(c,o),t(i,()=>i(o))||Ki(c),n(o,c),c},cu=n=>(t,e)=>{const s=t.createPanner();return s.orientationX===void 0?n(t,e):(yt(s,e),dt(s,e,"orientationX"),dt(s,e,"orientationY"),dt(s,e,"orientationZ"),dt(s,e,"positionX"),dt(s,e,"positionY"),dt(s,e,"positionZ"),ot(s,e,"coneInnerAngle"),ot(s,e,"coneOuterAngle"),ot(s,e,"coneOuterGain"),ot(s,e,"distanceModel"),ot(s,e,"maxDistance"),ot(s,e,"panningModel"),ot(s,e,"refDistance"),ot(s,e,"rolloffFactor"),s)},hu=(n,t,e,s,i,r,o,a,c,h)=>(u,{coneInnerAngle:l,coneOuterAngle:p,coneOuterGain:f,distanceModel:d,maxDistance:_,orientationX:g,orientationY:v,orientationZ:T,panningModel:S,positionX:A,positionY:y,positionZ:x,refDistance:b,rolloffFactor:w,...N})=>{const O=u.createPanner();if(N.channelCount>2||N.channelCountMode==="max")throw o();yt(O,N);const C={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},k=e(u,{...C,channelInterpretation:"speakers",numberOfInputs:6}),R=s(u,{...N,gain:1}),M=s(u,{...C,gain:1}),W=s(u,{...C,gain:0}),F=s(u,{...C,gain:0}),V=s(u,{...C,gain:0}),Q=s(u,{...C,gain:0}),B=s(u,{...C,gain:0}),Z=i(u,256,6,1),G=r(u,{...C,curve:new Float32Array([1,1]),oversample:"none"});let K=[g,v,T],Pt=[A,y,x];const Lt=new Float32Array(1);Z.onaudioprocess=({inputBuffer:j})=>{const Fe=[c(j,Lt,0),c(j,Lt,1),c(j,Lt,2)];Fe.some(($e,Qe)=>$e!==K[Qe])&&(O.setOrientation(...Fe),K=Fe);const Ve=[c(j,Lt,3),c(j,Lt,4),c(j,Lt,5)];Ve.some(($e,Qe)=>$e!==Pt[Qe])&&(O.setPosition(...Ve),Pt=Ve)},Object.defineProperty(W.gain,"defaultValue",{get:()=>0}),Object.defineProperty(F.gain,"defaultValue",{get:()=>0}),Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Q.gain,"defaultValue",{get:()=>0}),Object.defineProperty(B.gain,"defaultValue",{get:()=>0});const Y={get bufferSize(){},get channelCount(){return O.channelCount},set channelCount(j){if(j>2)throw o();R.channelCount=j,O.channelCount=j},get channelCountMode(){return O.channelCountMode},set channelCountMode(j){if(j==="max")throw o();R.channelCountMode=j,O.channelCountMode=j},get channelInterpretation(){return O.channelInterpretation},set channelInterpretation(j){R.channelInterpretation=j,O.channelInterpretation=j},get coneInnerAngle(){return O.coneInnerAngle},set coneInnerAngle(j){O.coneInnerAngle=j},get coneOuterAngle(){return O.coneOuterAngle},set coneOuterAngle(j){O.coneOuterAngle=j},get coneOuterGain(){return O.coneOuterGain},set coneOuterGain(j){if(j<0||j>1)throw t();O.coneOuterGain=j},get context(){return O.context},get distanceModel(){return O.distanceModel},set distanceModel(j){O.distanceModel=j},get inputs(){return[R]},get maxDistance(){return O.maxDistance},set maxDistance(j){if(j<0)throw new RangeError;O.maxDistance=j},get numberOfInputs(){return O.numberOfInputs},get numberOfOutputs(){return O.numberOfOutputs},get orientationX(){return M.gain},get orientationY(){return W.gain},get orientationZ(){return F.gain},get panningModel(){return O.panningModel},set panningModel(j){O.panningModel=j},get positionX(){return V.gain},get positionY(){return Q.gain},get positionZ(){return B.gain},get refDistance(){return O.refDistance},set refDistance(j){if(j<0)throw new RangeError;O.refDistance=j},get rolloffFactor(){return O.rolloffFactor},set rolloffFactor(j){if(j<0)throw new RangeError;O.rolloffFactor=j},addEventListener(...j){return R.addEventListener(j[0],j[1],j[2])},dispatchEvent(...j){return R.dispatchEvent(j[0])},removeEventListener(...j){return R.removeEventListener(j[0],j[1],j[2])}};l!==Y.coneInnerAngle&&(Y.coneInnerAngle=l),p!==Y.coneOuterAngle&&(Y.coneOuterAngle=p),f!==Y.coneOuterGain&&(Y.coneOuterGain=f),d!==Y.distanceModel&&(Y.distanceModel=d),_!==Y.maxDistance&&(Y.maxDistance=_),g!==Y.orientationX.value&&(Y.orientationX.value=g),v!==Y.orientationY.value&&(Y.orientationY.value=v),T!==Y.orientationZ.value&&(Y.orientationZ.value=T),S!==Y.panningModel&&(Y.panningModel=S),A!==Y.positionX.value&&(Y.positionX.value=A),y!==Y.positionY.value&&(Y.positionY.value=y),x!==Y.positionZ.value&&(Y.positionZ.value=x),b!==Y.refDistance&&(Y.refDistance=b),w!==Y.rolloffFactor&&(Y.rolloffFactor=w),(K[0]!==1||K[1]!==0||K[2]!==0)&&O.setOrientation(...K),(Pt[0]!==0||Pt[1]!==0||Pt[2]!==0)&&O.setPosition(...Pt);const rt=()=>{R.connect(O),n(R,G,0,0),G.connect(M).connect(k,0,0),G.connect(W).connect(k,0,1),G.connect(F).connect(k,0,2),G.connect(V).connect(k,0,3),G.connect(Q).connect(k,0,4),G.connect(B).connect(k,0,5),k.connect(Z).connect(u.destination)},Nt=()=>{R.disconnect(O),a(R,G,0,0),G.disconnect(M),M.disconnect(k),G.disconnect(W),W.disconnect(k),G.disconnect(F),F.disconnect(k),G.disconnect(V),V.disconnect(k),G.disconnect(Q),Q.disconnect(k),G.disconnect(B),B.disconnect(k),k.disconnect(Z),Z.disconnect(u.destination)};return h(us(Y,O),rt,Nt)},uu=n=>(t,{disableNormalization:e,imag:s,real:i})=>{const r=s instanceof Float32Array?s:new Float32Array(s),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(s).length<2)throw n();return a},Xs=(n,t,e,s)=>n.createScriptProcessor(t,e,s),lu=(n,t)=>(e,s)=>{const i=s.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return n(e,s);const r=e.createStereoPanner();return yt(r,s),dt(r,s,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r},du=(n,t,e,s,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,h={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u={...h,oversample:"none"},l=(d,_,g,v)=>{const T=new Float32Array(16385),S=new Float32Array(16385);for(let N=0;N<16385;N+=1){const O=N/16384*c;T[N]=Math.cos(O),S[N]=Math.sin(O)}const A=e(d,{...h,gain:0}),y=s(d,{...u,curve:T}),x=s(d,{...u,curve:a}),b=e(d,{...h,gain:0}),w=s(d,{...u,curve:S});return{connectGraph(){_.connect(A),_.connect(x.inputs===void 0?x:x.inputs[0]),_.connect(b),x.connect(g),g.connect(y.inputs===void 0?y:y.inputs[0]),g.connect(w.inputs===void 0?w:w.inputs[0]),y.connect(A.gain),w.connect(b.gain),A.connect(v,0,0),b.connect(v,0,1)},disconnectGraph(){_.disconnect(A),_.disconnect(x.inputs===void 0?x:x.inputs[0]),_.disconnect(b),x.disconnect(g),g.disconnect(y.inputs===void 0?y:y.inputs[0]),g.disconnect(w.inputs===void 0?w:w.inputs[0]),y.disconnect(A.gain),w.disconnect(b.gain),A.disconnect(v,0,0),b.disconnect(v,0,1)}}},p=(d,_,g,v)=>{const T=new Float32Array(16385),S=new Float32Array(16385),A=new Float32Array(16385),y=new Float32Array(16385),x=Math.floor(16385/2);for(let V=0;V<16385;V+=1)if(V>x){const Q=(V-x)/(16384-x)*c;T[V]=Math.cos(Q),S[V]=Math.sin(Q),A[V]=0,y[V]=1}else{const Q=V/(16384-x)*c;T[V]=1,S[V]=0,A[V]=Math.cos(Q),y[V]=Math.sin(Q)}const b=t(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),w=e(d,{...h,gain:0}),N=s(d,{...u,curve:T}),O=e(d,{...h,gain:0}),C=s(d,{...u,curve:S}),k=s(d,{...u,curve:a}),R=e(d,{...h,gain:0}),M=s(d,{...u,curve:A}),W=e(d,{...h,gain:0}),F=s(d,{...u,curve:y});return{connectGraph(){_.connect(b),_.connect(k.inputs===void 0?k:k.inputs[0]),b.connect(w,0),b.connect(O,0),b.connect(R,1),b.connect(W,1),k.connect(g),g.connect(N.inputs===void 0?N:N.inputs[0]),g.connect(C.inputs===void 0?C:C.inputs[0]),g.connect(M.inputs===void 0?M:M.inputs[0]),g.connect(F.inputs===void 0?F:F.inputs[0]),N.connect(w.gain),C.connect(O.gain),M.connect(R.gain),F.connect(W.gain),w.connect(v,0,0),R.connect(v,0,0),O.connect(v,0,1),W.connect(v,0,1)},disconnectGraph(){_.disconnect(b),_.disconnect(k.inputs===void 0?k:k.inputs[0]),b.disconnect(w,0),b.disconnect(O,0),b.disconnect(R,1),b.disconnect(W,1),k.disconnect(g),g.disconnect(N.inputs===void 0?N:N.inputs[0]),g.disconnect(C.inputs===void 0?C:C.inputs[0]),g.disconnect(M.inputs===void 0?M:M.inputs[0]),g.disconnect(F.inputs===void 0?F:F.inputs[0]),N.disconnect(w.gain),C.disconnect(O.gain),M.disconnect(R.gain),F.disconnect(W.gain),w.disconnect(v,0,0),R.disconnect(v,0,0),O.disconnect(v,0,1),W.disconnect(v,0,1)}}},f=(d,_,g,v,T)=>{if(_===1)return l(d,g,v,T);if(_===2)return p(d,g,v,T);throw i()};return(d,{channelCount:_,channelCountMode:g,pan:v,...T})=>{if(g==="max")throw i();const S=n(d,{...T,channelCount:1,channelCountMode:g,numberOfInputs:2}),A=e(d,{...T,channelCount:_,channelCountMode:g,gain:1}),y=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:v});let{connectGraph:x,disconnectGraph:b}=f(d,_,A,y,S);Object.defineProperty(y.gain,"defaultValue",{get:()=>0}),Object.defineProperty(y.gain,"maxValue",{get:()=>1}),Object.defineProperty(y.gain,"minValue",{get:()=>-1});const w={get bufferSize(){},get channelCount(){return A.channelCount},set channelCount(k){A.channelCount!==k&&(N&&b(),{connectGraph:x,disconnectGraph:b}=f(d,k,A,y,S),N&&x()),A.channelCount=k},get channelCountMode(){return A.channelCountMode},set channelCountMode(k){if(k==="clamped-max"||k==="max")throw i();A.channelCountMode=k},get channelInterpretation(){return A.channelInterpretation},set channelInterpretation(k){A.channelInterpretation=k},get context(){return A.context},get inputs(){return[A]},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get pan(){return y.gain},addEventListener(...k){return A.addEventListener(k[0],k[1],k[2])},dispatchEvent(...k){return A.dispatchEvent(k[0])},removeEventListener(...k){return A.removeEventListener(k[0],k[1],k[2])}};let N=!1;const O=()=>{x(),N=!0},C=()=>{b(),N=!1};return r(us(w,S),O,C)}},pu=(n,t,e,s,i,r,o)=>(a,c)=>{const h=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);yt(h,c);const u=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(u!==null&&u.length<2)throw t();ot(h,{curve:u},"curve"),ot(h,c,"oversample");let l=null,p=!1;return o(h,"curve",_=>()=>_.call(h),_=>g=>(_.call(h,g),p&&(s(g)&&l===null?l=n(a,h):!s(g)&&l!==null&&(l(),l=null)),g)),i(h,()=>{p=!0,s(h.curve)&&(l=n(a,h))},()=>{p=!1,l!==null&&(l(),l=null)})},fu=(n,t,e,s,i)=>(r,{curve:o,oversample:a,...c})=>{const h=r.createWaveShaper(),u=r.createWaveShaper();yt(h,c),yt(u,c);const l=e(r,{...c,gain:1}),p=e(r,{...c,gain:-1}),f=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1});let _=null,g=!1,v=null;const T={get bufferSize(){},get channelCount(){return h.channelCount},set channelCount(y){l.channelCount=y,p.channelCount=y,h.channelCount=y,f.channelCount=y,u.channelCount=y,d.channelCount=y},get channelCountMode(){return h.channelCountMode},set channelCountMode(y){l.channelCountMode=y,p.channelCountMode=y,h.channelCountMode=y,f.channelCountMode=y,u.channelCountMode=y,d.channelCountMode=y},get channelInterpretation(){return h.channelInterpretation},set channelInterpretation(y){l.channelInterpretation=y,p.channelInterpretation=y,h.channelInterpretation=y,f.channelInterpretation=y,u.channelInterpretation=y,d.channelInterpretation=y},get context(){return h.context},get curve(){return v},set curve(y){if(y!==null&&y.length<2)throw t();if(y===null)h.curve=y,u.curve=y;else{const x=y.length,b=new Float32Array(x+2-x%2),w=new Float32Array(x+2-x%2);b[0]=y[0],w[0]=-y[x-1];const N=Math.ceil((x+1)/2),O=(x+1)/2-1;for(let C=1;C<N;C+=1){const k=C/N*O,R=Math.floor(k),M=Math.ceil(k);b[C]=R===M?y[R]:(1-(k-R))*y[R]+(1-(M-k))*y[M],w[C]=R===M?-y[x-1-R]:-((1-(k-R))*y[x-1-R])-(1-(M-k))*y[x-1-M]}b[N]=x%2===1?y[N-1]:(y[N-2]+y[N-1])/2,h.curve=b,u.curve=w}v=y,g&&(s(v)&&_===null?_=n(r,l):_!==null&&(_(),_=null))},get inputs(){return[l]},get numberOfInputs(){return h.numberOfInputs},get numberOfOutputs(){return h.numberOfOutputs},get oversample(){return h.oversample},set oversample(y){h.oversample=y,u.oversample=y},addEventListener(...y){return l.addEventListener(y[0],y[1],y[2])},dispatchEvent(...y){return l.dispatchEvent(y[0])},removeEventListener(...y){return l.removeEventListener(y[0],y[1],y[2])}};o!==null&&(T.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==T.oversample&&(T.oversample=a);const S=()=>{l.connect(h).connect(f),l.connect(p).connect(u).connect(d).connect(f),g=!0,s(v)&&(_=n(r,l))},A=()=>{l.disconnect(h),h.disconnect(f),l.disconnect(p),p.disconnect(u),u.disconnect(d),d.disconnect(f),g=!1,_!==null&&(_(),_=null)};return i(us(T,f),S,A)},It=()=>new DOMException("","NotSupportedError"),mu={numberOfChannels:1},_u=(n,t,e,s,i)=>class extends n{constructor(o,a,c){let h;if(typeof o=="number"&&a!==void 0&&c!==void 0)h={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")h=o;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:l,sampleRate:p}={...mu,...h},f=s(l,u,p);t(bs,()=>bs(f))||f.addEventListener("statechange",(()=>{let d=0;const _=g=>{this._state==="running"&&(d>0?(f.removeEventListener("statechange",_),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):d+=1)};return _})()),super(f,l),this._length=u,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,no(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},gu={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},yu=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const u=i(c),l={...gu,...h},p=e(u,l),f=r(u),d=f?s():null,_=c.sampleRate/2;super(c,!1,p,d),this._detune=t(this,f,p.detune,153600,-153600),this._frequency=t(this,f,p.frequency,_,-_),this._nativeOscillatorNode=p,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&l.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=l.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const h=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=h;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===h?c:u}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){ts(this);const h=()=>{this._nativeOscillatorNode.removeEventListener("ended",h),fe(this)&&Gs(this)};this._nativeOscillatorNode.addEventListener("ended",h)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},vu=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const h=async(u,l)=>{let p=e(u);const f=Ot(p,l);if(!f){const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:o===null?void 0:o,type:p.type};p=t(l,d),a!==null&&p.start(a),c!==null&&p.stop(c)}return r.set(l,p),f?(await n(l,u.detune,p.detune),await n(l,u.frequency,p.frequency)):(await s(l,u.detune,p.detune),await s(l,u.frequency,p.frequency)),await i(u,l,p),p};return{set periodicWave(u){o=u},set start(u){a=u},set stop(u){c=u},render(u,l){const p=r.get(l);return p!==void 0?Promise.resolve(p):h(u,l)}}},wu={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},xu=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const u=i(c),l={...wu,...h},p=e(u,l),f=r(u),d=f?s():null;super(c,!1,p,d),this._nativePannerNode=p,this._orientationX=t(this,f,p.orientationX,Et,qt),this._orientationY=t(this,f,p.orientationY,Et,qt),this._orientationZ=t(this,f,p.orientationZ,Et,qt),this._positionX=t(this,f,p.positionX,Et,qt),this._positionY=t(this,f,p.positionY,Et,qt),this._positionZ=t(this,f,p.positionZ,Et,qt),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},bu=(n,t,e,s,i,r,o,a,c,h)=>()=>{const u=new WeakMap;let l=null;const p=async(f,d)=>{let _=null,g=r(f);const v={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},T={...v,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},S=Ot(g,d);if("bufferSize"in g)_=s(d,{...v,gain:1});else if(!S){const A={...T,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=i(d,A)}if(u.set(d,_===null?g:_),_!==null){if(l===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const C=new o(6,f.context.length,d.sampleRate),k=t(C,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});k.connect(C.destination),l=(async()=>{const R=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(M,W)=>{const F=e(C,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:W===0?1:0});return await a(C,M,F.offset),F}));for(let M=0;M<6;M+=1)R[M].connect(k,0,M),R[M].start(0);return h(C)})()}const A=await l,y=s(d,{...v,gain:1});await c(f,d,y);const x=[];for(let C=0;C<A.numberOfChannels;C+=1)x.push(A.getChannelData(C));let b=[x[0][0],x[1][0],x[2][0]],w=[x[3][0],x[4][0],x[5][0]],N=s(d,{...v,gain:1}),O=i(d,{...T,orientationX:b[0],orientationY:b[1],orientationZ:b[2],positionX:w[0],positionY:w[1],positionZ:w[2]});y.connect(N).connect(O.inputs[0]),O.connect(_);for(let C=128;C<A.length;C+=128){const k=[x[0][C],x[1][C],x[2][C]],R=[x[3][C],x[4][C],x[5][C]];if(k.some((M,W)=>M!==b[W])||R.some((M,W)=>M!==w[W])){b=k,w=R;const M=C/d.sampleRate;N.gain.setValueAtTime(0,M),N=s(d,{...v,gain:0}),O=i(d,{...T,orientationX:b[0],orientationY:b[1],orientationZ:b[2],positionX:w[0],positionY:w[1],positionZ:w[2]}),N.gain.setValueAtTime(1,M),y.connect(N).connect(O.inputs[0]),O.connect(_)}}return _}return S?(await n(d,f.orientationX,g.orientationX),await n(d,f.orientationY,g.orientationY),await n(d,f.orientationZ,g.orientationZ),await n(d,f.positionX,g.positionX),await n(d,f.positionY,g.positionY),await n(d,f.positionZ,g.positionZ)):(await a(d,f.orientationX,g.orientationX),await a(d,f.orientationY,g.orientationY),await a(d,f.orientationZ,g.orientationZ),await a(d,f.positionX,g.positionX),await a(d,f.positionY,g.positionY),await a(d,f.positionZ,g.positionZ)),hs(g)?await c(f,d,g.inputs[0]):await c(f,d,g),g};return{render(f,d){const _=u.get(d);return _!==void 0?Promise.resolve(_):p(f,d)}}},Tu={disableNormalization:!1},Su=(n,t,e,s)=>class fo{constructor(r,o){const a=t(r),c=s({...Tu,...o}),h=n(a,c);return e.add(h),h}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===fo.prototype||e.has(r)}},ku=(n,t)=>(e,s,i)=>(n(s).replay(i),t(s,e,i)),Du=(n,t,e)=>async(s,i,r)=>{const o=n(s);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([h,u])=>{const p=await t(h).render(h,i),f=s.context.destination;!e(h)&&(s!==f||!e(s))&&p.connect(r,u,c)})).reduce((a,c)=>[...a,...c],[]))},Au=(n,t,e)=>async(s,i,r)=>{const o=t(s);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const u=await n(a).render(a,i);e(a)||u.connect(r,c)}))},Cu=(n,t,e,s)=>i=>n(bs,()=>bs(i))?Promise.resolve(n(s,s)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),Ou=n=>(t,e)=>{n.set(t,e)},Nu=n=>(t,e)=>n.set(t,e),Eu=(n,t,e,s,i,r,o,a)=>(c,h)=>e(c).render(c,h).then(()=>Promise.all(Array.from(s(h)).map(u=>e(u).render(u,h)))).then(()=>i(h)).then(u=>(typeof u.copyFromChannel!="function"?(o(u),Xi(u)):t(r,()=>r(u))||a(u),n.add(u),u)),Mu={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},Ru=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=i(a),u={...Mu,...c},l=e(h,u),p=r(h),f=p?s():null;super(a,!1,l,f),this._pan=t(this,p,l.pan)}get pan(){return this._pan}},Iu=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const u=Ot(h,c);if(!u){const l={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,pan:h.pan.value};h=t(c,l)}return r.set(c,h),u?await n(c,a.pan,h.pan):await s(c,a.pan,h.pan),hs(h)?await i(a,c,h.inputs[0]):await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},qu=n=>()=>{if(n===null)return!1;try{new n({length:1,sampleRate:44100})}catch{return!1}return!0},Fu=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100).createBuffer(1,1,44100);if(e.copyToChannel===void 0)return!0;const s=new Float32Array(2);try{e.copyFromChannel(s,0,0)}catch{return!1}return!0},Vu=n=>()=>{if(n===null)return!1;if(n.prototype!==void 0&&n.prototype.close!==void 0)return!0;const t=new n,e=t.close!==void 0;try{t.close()}catch{}return e},Pu=n=>()=>{if(n===null)return Promise.resolve(!1);const t=new n(1,1,44100);return new Promise(e=>{let s=!0;const i=o=>{s&&(s=!1,t.startRendering(),e(o instanceof TypeError))};let r;try{r=t.decodeAudioData(null,()=>{},i)}catch(o){i(o)}r!==void 0&&r.catch(i)})},Lu=n=>()=>{if(n===null)return!1;let t;try{t=new n({latencyHint:"balanced"})}catch{return!1}return t.close(),!0},ju=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100).createGain(),s=e.connect(e)===e;return e.disconnect(e),s},Wu=(n,t)=>async()=>{if(n===null)return!0;if(t===null)return!1;const e=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new MessageChannel,i=new t(1,128,44100),r=URL.createObjectURL(e);let o=!1;try{await i.audioWorklet.addModule(r);const a=new n(i,"a",{numberOfOutputs:0}),c=i.createOscillator();await new Promise(h=>{a.port.onmessage=()=>h(),a.port.postMessage(s.port2,[s.port2])}),a.port.onmessage=()=>o=!0,c.connect(a),c.start(0),await i.startRendering(),o=await new Promise(h=>{s.port1.onmessage=({data:u})=>h(u===1),s.port1.postMessage(0)})}catch{}finally{s.port1.close(),URL.revokeObjectURL(r)}return o},Bu=(n,t)=>async()=>{if(n===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await s.audioWorklet.addModule(i);const a=new n(s,"a",{numberOfOutputs:0}),c=s.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await s.startRendering(),await new Promise(h=>setTimeout(h))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},zu=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100).createChannelMerger();if(e.channelCountMode==="max")return!0;try{e.channelCount=2}catch{return!0}return!1},Uu=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100);return t.createConstantSource===void 0?!0:t.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},Gu=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100),e=t.createConvolver();e.buffer=t.createBuffer(1,1,t.sampleRate);try{e.buffer=t.createBuffer(1,1,t.sampleRate)}catch{return!1}return!0},Zu=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100).createConvolver();try{e.channelCount=1}catch{return!1}return!0},$u=n=>()=>n!==null&&n.hasOwnProperty("isSecureContext"),Qu=n=>()=>{if(n===null)return!1;const t=new n;try{return t.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{t.close()}},Xu=(n,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{s.disconnect(),i(e.currentTime!==0)},e.startRendering()})},Yu=n=>()=>{if(n===null)return Promise.resolve(!1);const t=new n(1,1,44100);if(t.createStereoPanner===void 0||t.createConstantSource===void 0)return Promise.resolve(!0);const e=t.createConstantSource(),s=t.createStereoPanner();return e.channelCount=1,e.offset.value=1,s.channelCount=1,e.start(),e.connect(s).connect(t.destination),t.startRendering().then(i=>i.getChannelData(0)[0]!==1)},Hu=()=>new DOMException("","UnknownError"),Ju={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},Ku=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const u=i(c),l={...Ju,...h},p=e(u,l),d=r(u)?s():null;super(c,!0,p,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=p,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},tl=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Ot(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=n(o,h)}return s.set(o,a),hs(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},el=()=>typeof window>"u"?null:window,sl=(n,t)=>e=>{e.copyFromChannel=(s,i,r=0)=>{const o=n(r),a=n(i);if(a>=e.numberOfChannels)throw t();const c=e.length,h=e.getChannelData(a),u=s.length;for(let l=o<0?-o:0;l+o<c&&l<u;l+=1)s[l]=h[l+o]},e.copyToChannel=(s,i,r=0)=>{const o=n(r),a=n(i);if(a>=e.numberOfChannels)throw t();const c=e.length,h=e.getChannelData(a),u=s.length;for(let l=o<0?-o:0;l+o<c&&l<u;l+=1)h[l+o]=s[l]}},nl=n=>t=>{t.copyFromChannel=(e=>(s,i,r=0)=>{const o=n(r),a=n(i);if(o<t.length)return e.call(t,s,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(s,i,r=0)=>{const o=n(r),a=n(i);if(o<t.length)return e.call(t,s,a,o)})(t.copyToChannel)},il=n=>(t,e)=>{const s=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=s),n(t,"buffer",i=>()=>{const r=i.call(t);return r===s?null:r},i=>r=>i.call(t,r===null?s:r))},rl=(n,t)=>(e,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw n()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw n()}});const i=e.createBufferSource();t(s,()=>{const a=s.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(s,0,c)},()=>i.disconnect(s))},mo=(n,t,e)=>n.copyFromChannel===void 0?n.getChannelData(e)[0]:(n.copyFromChannel(t,e),t[0]),_o=n=>{if(n===null)return!1;const t=n.length;return t%2!==0?n[Math.floor(t/2)]!==0:n[t/2-1]+n[t/2]!==0},Ys=(n,t,e,s)=>{let i=n;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(n,t,{get:e(r),set:s(o)})},ol=n=>({...n,outputChannelCount:n.outputChannelCount!==void 0?n.outputChannelCount:n.numberOfInputs===1&&n.numberOfOutputs===1?[n.channelCount]:Array.from({length:n.numberOfOutputs},()=>1)}),al=n=>({...n,channelCount:n.numberOfOutputs}),cl=n=>{const{imag:t,real:e}=n;return t===void 0?e===void 0?{...n,imag:[0,0],real:[0,0]}:{...n,imag:Array.from(e,()=>0),real:e}:e===void 0?{...n,imag:t,real:Array.from(t,()=>0)}:{...n,imag:t,real:e}},go=(n,t,e)=>{try{n.setValueAtTime(t,e)}catch(s){if(s.code!==9)throw s;go(n,t,e+1e-7)}},hl=n=>{const t=n.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},ul=n=>{const t=n.createBufferSource(),e=n.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},ll=n=>{const t=n.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},tr=n=>{const t=n.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},yo=n=>{const t=n.createBuffer(1,1,44100),e=n.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},er=n=>{const t=n.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},dl=n=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(n)}finally{t.close(),e.close()}},pl=()=>{try{new DOMException}catch{return!1}return!0},fl=()=>new Promise(n=>{const t=new ArrayBuffer(0),{port1:e,port2:s}=new MessageChannel;e.onmessage=({data:i})=>n(i!==null),s.postMessage(t,[t])}),ml=n=>{n.start=(t=>(e=0,s=0,i)=>{const r=n.buffer,o=r===null?s:Math.min(r.duration,s);r!==null&&o>r.duration-.5/n.context.sampleRate?t.call(n,e,0,0):t.call(n,e,o,i)})(n.start)},vo=(n,t)=>{const e=t.createGain();n.connect(e);const s=(i=>()=>{i.call(n,e),n.removeEventListener("ended",s)})(n.disconnect);n.addEventListener("ended",s),us(n,e),n.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(n,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(n,o),r=!0}})(n.stop)},ls=(n,t)=>e=>{const s={value:n};return Object.defineProperties(e,{currentTarget:s,target:s}),typeof t=="function"?t.call(n,e):t.handleEvent.call(n,e)},_l=wa(Ue),gl=Da(Ue),yl=Pc(Rn),wo=new WeakMap,vl=sh(wo),Ht=fc(new Map,new WeakMap),ee=el(),xo=Rh(Ht,ce),sr=eh(Mt),At=Du(Mt,sr,We),wl=Ea(xo,it,At),nt=rh(Mn),wt=ou(ee),tt=bh(wt),bo=new WeakMap,To=Qc(ls),ke=Vh(ee),nr=yh(ke),ir=vh(ee),So=wh(ee),es=Lh(ee),mt=sc(xa(Yr),ka(_l,gl,gn,yl,yn,Mt,vl,Us,it,Ue,fe,We,un),Ht,ph(Hn,yn,Mt,it,xs,fe),ce,In,It,Ic(gn,Hn,Mt,it,xs,nt,fe,tt),Wc(bo,Mt,te),To,nt,nr,ir,So,tt,es),xl=Na(mt,wl,ce,xo,nt,tt),rr=new WeakSet,qr=Ih(ee),ko=Ac(new Uint32Array(1)),or=sl(ko,ce),ar=nl(ko),bl=Ra(rr,Ht,It,qr,wt,qu(qr),or,ar),qn=Aa(Vt),Do=Au(sr,Zs,We),he=xc(Do),ds=Fh(qn,Ht,hl,ul,ll,tr,yo,er,ml,il(Ys),vo),ue=ku(nh(Zs),Do),Tl=Fa(he,ds,it,ue,At),ie=nc(ba(Hr),bo,Qi,ic,fa,ma,_a,ga,ya,Qn,Qr,ke,go),Sl=qa(mt,Tl,ie,xt,ds,nt,tt,ls),kl=Ga(mt,Za,ce,xt,Ph(Vt,Ys),nt,tt,At),Dl=pc(he,lo,it,ue,At),Ge=Nu(wo),Al=dc(mt,ie,Dl,In,lo,nt,tt,Ge),Ie=Eh(Ue,ir),Cl=rl(xt,Ie),qe=Zh(ke,Cl),Ol=gc(qe,it,At),Nl=_c(mt,Ol,qe,nt,tt),El=wc(Qs,it,At),Ml=vc(mt,El,Qs,nt,tt,al),Rl=Xh(qn,ds,Vt,Ie),ps=Qh(qn,Ht,Rl,tr,er),Il=Dc(he,ps,it,ue,At),ql=kc(mt,ie,Il,ps,nt,tt,ls),Ao=Yh(It,Ys),Fl=Nc(Ao,it,At),Vl=Oc(mt,Fl,Ao,nt,tt,Ge),Pl=Vc(he,po,it,ue,At),Ll=Fc(mt,ie,Pl,po,nt,tt,Ge),Co=Hh(It),jl=Gc(he,Co,it,ue,At),Wl=Uc(mt,ie,jl,Co,It,nt,tt,Ge),Bl=Kc(he,Vt,it,ue,At),zl=Jc(mt,ie,Bl,Vt,nt,tt),Ul=eu(In,xt,Xs,It),Fn=Cu(Ht,Vt,Xs,Xu(Vt,wt)),Gl=dh(ds,it,wt,At,Fn),Zl=Jh(Ul),$l=uh(mt,Zl,Gl,nt,tt,Ge),Ql=$a(ie,qe,ps,Xs,It,mo,tt,Ys),Oo=new WeakMap,Xl=Nh(kl,Ql,To,tt,Oo,ls),No=au(qn,Ht,tr,yo,er,vo),Yl=vu(he,No,it,ue,At),Hl=yu(mt,ie,No,Yl,nt,tt,ls),Eo=Tc(ds),Jl=fu(Eo,xt,Vt,_o,Ie),Vn=pu(Eo,xt,Jl,_o,Ie,ke,Ys),Kl=hu(gn,xt,qe,Vt,Xs,Vn,It,yn,mo,Ie),Mo=cu(Kl),td=bu(he,qe,ps,Vt,Mo,it,wt,ue,At,Fn),ed=xu(mt,ie,Mo,td,nt,tt,Ge),sd=uu(ce),nd=Su(sd,nt,new WeakSet,cl),id=du(qe,Qs,Vt,Vn,It,Ie),Ro=lu(id,It),rd=Iu(he,Ro,it,ue,At),od=Ru(mt,ie,Ro,rd,nt,tt),ad=tl(Vn,it,At),cd=Ku(mt,xt,Vn,ad,nt,tt,Ge),Io=Th(ee),cr=Xc(ee),qo=new WeakMap,hd=oh(qo,wt),ud=Io?Sa(Ht,It,$c(ee),cr,Yc(va),nt,hd,tt,es,new WeakMap,new WeakMap,Bu(es,wt),ee):void 0,ld=xh(nr,tt),dd=Rc(rr,Ht,Mc,Zc,new WeakSet,nt,ld,mn,bs,or,ar),Fo=uc(ud,xl,bl,Sl,Al,Nl,Ml,ql,Vl,dd,Ll,Wl,zl,$l,Xl,Hl,ed,nd,od,cd),pd=kh(mt,su,nt,tt),fd=Ah(mt,nu,nt,tt),md=Ch(mt,iu,nt,tt),_d=ru(xt,tt),gd=Oh(mt,_d,nt),yd=Ua(Fo,xt,It,Hu,pd,fd,md,gd,ke),hr=ah(Oo),vd=Ca(hr),Vo=bc(ce),wd=Lc(hr),Po=Bc(ce),Lo=new WeakMap,xd=th(Lo,te),bd=Gh(Vo,ce,xt,qe,Qs,ps,Vt,Xs,It,Po,cr,xd,Ie),Td=Wh(xt,bd,Vt,It,Ie),Sd=hc(he,Vo,ds,qe,Qs,ps,Vt,wd,Po,cr,it,es,wt,ue,At,Fn),kd=ih(qo),Dd=Ou(Lo),Fr=Io?oc(vd,mt,ie,Sd,Td,Mt,kd,nt,tt,es,ol,Dd,dl,ls):void 0,Ad=Ec(It,wt),Cd=Eu(rr,Ht,sr,hr,Fn,mn,or,ar),Od=_u(Fo,Ht,xt,Ad,Cd),Nd=fh(Mn,nr),Ed=mh($i,ir),Md=_h(Qi,So),Rd=gh(Mn,tt),Xp=()=>Sh(Ht,Fu(wt),Vu(ke),Pu(wt),Lu(ke),ju(wt),Wu(es,wt),zu(wt),Uu(wt),Gu(wt),Zu(wt),pl,$u(ee),Qu(ke),Yu(wt),fl);function q(n,t){if(!n)throw new Error(t)}function Tt(n,t,e=1/0){if(!(t<=n&&n<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${n}`)}function ur(n){!n.isOffline&&n.state!=="running"&&Hs('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let lr=console;function Id(n){lr=n}function jo(...n){lr.log(...n)}function Hs(...n){lr.warn(...n)}const Yp=Object.freeze(Object.defineProperty({__proto__:null,assert:q,assertContextRunning:ur,assertRange:Tt,log:jo,setLogger:Id,warn:Hs},Symbol.toStringTag,{value:"Module"}));function Wt(n){return typeof n>"u"}function $(n){return!Wt(n)}function qd(n){return typeof n=="function"}function Xt(n){return typeof n=="number"}function De(n){return Object.prototype.toString.call(n)==="[object Object]"&&n.constructor===Object}function Wo(n){return typeof n=="boolean"}function Ct(n){return Array.isArray(n)}function se(n){return typeof n=="string"}function cn(n){return se(n)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(n)}function Fd(n){return new yd(n)}function Vd(n,t,e){return new Od(n,t,e)}const me=typeof self=="object"?self:null,Pd=me&&(me.hasOwnProperty("AudioContext")||me.hasOwnProperty("webkitAudioContext"));function Ld(n,t,e){return q($(Fr),"This node only works in a secure context (https or localhost)"),new Fr(n,t,e)}function re(n,t,e,s){var i=arguments.length,r=i<3?t:s===null?s=Object.getOwnPropertyDescriptor(t,e):s,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(n,t,e,s);else for(var a=n.length-1;a>=0;a--)(o=n[a])&&(r=(i<3?o(r):i>3?o(t,e,r):o(t,e))||r);return i>3&&r&&Object.defineProperty(t,e,r),r}function et(n,t,e,s){function i(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(u){try{h(s.next(u))}catch(l){o(l)}}function c(u){try{h(s.throw(u))}catch(l){o(l)}}function h(u){u.done?r(u.value):i(u.value).then(a,c)}h((s=s.apply(n,t||[])).next())})}class jd{constructor(t,e,s){this._callback=t,this._type=e,this._updateInterval=s,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),s=new Worker(e);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){this._updateInterval=Math.max(t,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(t*1e3,1))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function Be(n){return Md(n)}function Ae(n){return Ed(n)}function ln(n){return Rd(n)}function Ye(n){return Nd(n)}function Bo(n){return n instanceof AudioBuffer}function Wd(n,t){return n==="value"||Be(t)||Ae(t)||Bo(t)}function Qt(n,...t){if(!t.length)return n;const e=t.shift();if(De(n)&&De(e))for(const s in e)Wd(s,e[s])?n[s]=e[s]:De(e[s])?(n[s]||Object.assign(n,{[s]:{}}),Qt(n[s],e[s])):Object.assign(n,{[s]:e[s]});return Qt(n,...t)}function Bd(n,t){return n.length===t.length&&n.every((e,s)=>t[s]===e)}function m(n,t,e=[],s){const i={},r=Array.from(t);if(De(r[0])&&s&&!Reflect.has(r[0],s)&&(Object.keys(r[0]).some(a=>Reflect.has(n,a))||(Qt(i,{[s]:r[0]}),e.splice(e.indexOf(s),1),r.shift())),r.length===1&&De(r[0]))Qt(i,r[0]);else for(let o=0;o<e.length;o++)$(r[o])&&(i[e[o]]=r[o]);return Qt(n,i)}function zd(n){return n.constructor.getDefaults()}function Kt(n,t){return Wt(n)?t:n}function St(n,t){return t.forEach(e=>{Reflect.has(n,e)&&delete n[e]}),n}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class we{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||me&&this.toString()===me.TONE_DEBUG_CLASS)&&jo(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}we.version=$r;const dr=1e-6;function bn(n,t){return n>t+dr}function si(n,t){return bn(n,t)||Jt(n,t)}function zo(n,t){return n+dr<t}function Jt(n,t){return Math.abs(n-t)<dr}function Uo(n,t,e){return Math.max(Math.min(n,e),t)}class le extends we{constructor(){super(),this.name="Timeline",this._timeline=[];const t=m(le.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(q(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];q(si(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const s=this._search(t,e);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const s=this._search(t,e);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const s=this._search(t);return s-1>=0?this._timeline[s-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Jt(this._timeline[e].time,t)){for(let s=e;s>=0&&Jt(this._timeline[s].time,t);s--)e=s;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&si(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let s=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;s<r;){let o=Math.floor(s+(r-s)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Jt(a[e],t)){for(let h=o;h<this._timeline.length;h++){const u=this._timeline[h];if(Jt(u[e],t))o=h;else break}return o}else{if(zo(a[e],t)&&bn(c[e],t))return o;bn(a[e],t)?r=o:s=o+1}}return-1}_iterate(t,e=0,s=this._timeline.length-1){this._timeline.slice(e,s+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const s=this._search(t);return s!==-1&&this._iterate(e,0,s),this}forEachAfter(t,e){const s=this._search(t);return this._iterate(e,s+1),this}forEachBetween(t,e,s){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(s,i,r)):i===-1&&this._iterate(s,0,r),this}forEachFrom(t,e){let s=this._search(t);for(;s>=0&&this._timeline[s].time>=t;)s--;return this._iterate(e,s+1),this}forEachAtTime(t,e){const s=this._search(t);if(s!==-1&&Jt(this._timeline[s].time,t)){let i=s;for(let r=s;r>=0&&Jt(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Go=[];function Pn(n){Go.push(n)}function Ud(n){Go.forEach(t=>t(n))}const Zo=[];function Ln(n){Zo.push(n)}function Gd(n){Zo.forEach(t=>t(n))}class Js extends we{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(i=>{Wt(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(e)}),this}once(t,e){const s=(...i)=>{e(...i),this.off(t,s)};return this.on(t,s),this}off(t,e){return t.split(/\W+/).forEach(i=>{if(Wt(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(Wt(e))this._events[t]=[];else{const r=this._events[t];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const s=this._events[t].slice(0);for(let i=0,r=s.length;i<r;i++)s[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const s=Object.getOwnPropertyDescriptor(Js.prototype,e);Object.defineProperty(t.prototype,e,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class $o extends Js{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Ks extends $o{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new le,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const t=m(Ks.getDefaults(),arguments,["context"]);t.context?this._context=t.context:this._context=Fd({latencyHint:t.latencyHint}),this._ticker=new jd(this.emit.bind(this,"tick"),t.clockSource,t.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(t.latencyHint),this.lookAhead=t.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(Ud(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,s){return this._context.createBuffer(t,e,s)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,s){return this._context.createPeriodicWave(t,e,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return q(Ye(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return q(Ye(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return q(Ye(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){q(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){q(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){q(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){q(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return Ld(this.rawContext,t,e)}addAudioWorkletModule(t,e){return et(this,void 0,void 0,function*(){q($(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(e)||this._workletModules.set(e,this.rawContext.audioWorklet.addModule(t)),yield this._workletModules.get(e)})}workletsAreReady(){return et(this,void 0,void 0,function*(){const t=[];this._workletModules.forEach(e=>t.push(e)),yield Promise.all(t)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get latencyHint(){return this._latencyHint}_setLatencyHint(t){let e=0;if(this._latencyHint=t,se(t))switch(t){case"interactive":e=.1;break;case"playback":e=.5;break;case"balanced":e=.25;break}this.lookAhead=e,this.updateInterval=e/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return Ye(this._context)?this._context.resume():Promise.resolve()}close(){return et(this,void 0,void 0,function*(){Ye(this._context)&&(yield this._context.close()),this._initialized&&Gd(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),s=e.getChannelData(0);for(let r=0;r<s.length;r++)s[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:s+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const s=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:s,time:r+e})};return i(),s}}class Zd extends $o{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,s){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t,e){return et(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function P(n,t){Ct(t)?t.forEach(e=>P(n,e)):Object.defineProperty(n,t,{enumerable:!0,writable:!1})}function tn(n,t){Ct(t)?t.forEach(e=>tn(n,e)):Object.defineProperty(n,t,{writable:!0})}const X=()=>{};class H extends we{constructor(){super(),this.name="ToneAudioBuffer",this.onload=X;const t=m(H.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,t.url&&Bo(t.url)||t.url instanceof H?this.set(t.url):se(t.url)&&this.load(t.url).catch(t.onerror)}static getDefaults(){return{onerror:X,onload:X,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:ct().sampleRate}set(t){return t instanceof H?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return et(this,void 0,void 0,function*(){const e=H.load(t).then(s=>{this.set(s),this.onload(this)});H.downloads.push(e);try{yield e}finally{const s=H.downloads.indexOf(e);H.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ct(t)&&t[0].length>0,s=e?t.length:1,i=e?t[0].length:t.length,r=ct(),o=r.createBuffer(s,i,r.sampleRate),a=!e&&s===1?[t]:t;for(let c=0;c<s;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(Xt(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const s=this.numberOfChannels;for(let i=0;i<s;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/s),this.fromArray(e)}return this}toArray(t){if(Xt(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let s=0;s<this.numberOfChannels;s++)e[s]=this.getChannelData(s);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){const s=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);q(s<i,"The start time must be less than the end time");const r=i-s,o=ct().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(s,i),a);return new H(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new H().fromArray(t)}static fromUrl(t){return et(this,void 0,void 0,function*(){return yield new H().load(t)})}static load(t){return et(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const a=e[1].split("|");let c=a[0];for(const h of a)if(H.supportsType(h)){c=h;break}t=t.replace(e[0],c)}const s=H.baseUrl===""||H.baseUrl.endsWith("/")?H.baseUrl:H.baseUrl+"/",i=yield fetch(s+t);if(!i.ok)throw new Error(`could not load url: ${t}`);const r=yield i.arrayBuffer();return yield ct().decodeAudioData(r)})}static supportsType(t){const e=t.split("."),s=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return et(this,void 0,void 0,function*(){for(yield Promise.resolve();H.downloads.length;)yield H.downloads[0]})}}H.baseUrl="";H.downloads=[];class en extends Ks{constructor(){super({clockSource:"offline",context:ln(arguments[0])?arguments[0]:Vd(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:ln(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=ln(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return et(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const s=Math.floor(this.sampleRate/128);t&&e%s===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(t=!0){return et(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new H(e)})}close(){return Promise.resolve()}}const Qo=new Zd;let Je=Qo;function ct(){return Je===Qo&&Pd&&ni(new Ks),Je}function ni(n){Ye(n)?Je=new Ks(n):ln(n)?Je=new en(n):Je=n}function Hp(){return Je.resume()}if(me&&!me.TONE_SILENCE_LOGGING){const t=` * Tone.js v${$r} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function Ts(n){return Math.pow(10,n/20)}function jn(n){return 20*(Math.log(n)/Math.LN10)}function Ss(n){return Math.pow(2,n/12)}let Wn=440;function $d(){return Wn}function Qd(n){Wn=n}function Le(n){return Math.round(Xo(n))}function Xo(n){return 69+12*Math.log2(n/Wn)}function Yo(n){return Wn*Math.pow(2,(n-69)/12)}class pr extends we{constructor(t,e,s){super(),this.defaultUnits="s",this._val=e,this._units=s,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const s=parseInt(t,10),i=e==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/s)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,s)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),s&&s!=="0"&&(i+=this._beatsToUnits(parseFloat(s)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof pr&&this.fromType(this._val),Wt(this._val))return this._noArg();if(se(this._val)&&Wt(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(De(this._val)){let t=0;for(const e in this._val)if($(this._val[e])){const s=this._val[e],i=new this.constructor(this.context,e).valueOf()*s;t+=i}return t}if($(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return se(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class $t extends pr{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new $t(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const s=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),a=Math.round(i/s)*s-i;return i+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let s=e[0],i=new $t(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new $t(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(s=r,i=o)}),s}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const s=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[s,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.round(e*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return Le(this.toFrequency())}_now(){return this.context.now()}}function Jp(n,t){return new $t(ct(),n,t)}class Ft extends $t{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return $d()}static set A4(t){Qd(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:Ft.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(t,e){const i=Xd[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?i:Ft.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,s){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),s&&s!=="0"&&(i*=this._beatsToUnits(parseFloat(s)/4)),i}}})}transpose(t){return new Ft(this.context,this.valueOf()*Ss(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return Le(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Ft.A4);let s=Math.round(12*e)+57;const i=Math.floor(s/12);return i<0&&(s+=-12*i),Yd[s%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Yo(t)}static ftom(t){return Le(t)}}const Xd={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},Yd=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Kp(n,t){return new Ft(ct(),n,t)}class gt extends $t{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function tf(n,t){return new gt(ct(),n,t)}class bt extends we{constructor(){super();const t=m(bt.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:ct()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return new $t(this.context,t).toSeconds()}toFrequency(t){return new Ft(this.context,t).toFrequency()}toTicks(t){return new gt(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(s=>{Wt(t[s])&&delete e[s]}),e}get(){const t=zd(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const s=this[e];$(s)&&$(s.value)&&$(s.setValueAtTime)?t[e]=s.value:s instanceof bt?t[e]=s._getPartialProperties(t[e]):Ct(s)||Xt(s)||se(s)||Wo(s)?t[e]=s:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&$(this[e])&&(this[e]&&$(this[e].value)&&$(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof bt?this[e].set(t[e]):this[e]=t[e])}),this}}class sn extends le{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,s){return Tt(e,0),this.add(Object.assign({},s,{state:t,time:e})),this}getLastState(t,e){const s=this._search(e);for(let i=s;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,e){const s=this._search(e);if(s!==-1)for(let i=s;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class z extends bt{constructor(){super(m(z.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=m(z.getDefaults(),arguments,["param","units","convert"]);for(q($(t.param)&&(Be(t.param)||t.param instanceof z),"param must be an AudioParam");!Be(t.param);)t.param=t.param._param;this._swappable=$(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new le(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,$(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(bt.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return $(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return $(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return $(this.maxValue)&&$(this.minValue)&&Tt(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?Ts(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?jn(t):t}setValueAtTime(t,e){const s=this.toSeconds(e),i=this._fromType(t);return q(isFinite(i)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,s),this._events.add({time:s,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,s),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),s=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}else if(s===null)r=i.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}s.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,s.time,s.value,e):r=this._exponentialInterpolate(i.time,o,s.time,s.value,e)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const s=this._fromType(t),i=this.toSeconds(e);return q(isFinite(s)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this._events.add({time:i,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(s,i),this}exponentialRampToValueAtTime(t,e){let s=this._fromType(t);s=Jt(s,0)?this._minOutput:s,this._assertRange(s);const i=this.toSeconds(e);return q(isFinite(s)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(s,i),this}exponentialRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(t,s+this.toSeconds(e)),this}linearRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(t,s+this.toSeconds(e)),this}targetRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(t,s,e),this}exponentialApproachValueAtTime(t,e,s){e=this.toSeconds(e),s=this.toSeconds(s);const i=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+s*.9),this.linearRampToValueAtTime(t,e+s),this}setTargetAtTime(t,e,s){const i=this._fromType(t);q(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),q(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:s,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,s),this._param.setTargetAtTime(i,r,s),this}setValueCurveAtTime(t,e,s,i=1){s=this.toSeconds(s),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=s/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return q(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),s=this._fromType(this.getValueAtTime(e));q(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+s);const i=this._events.get(e),r=this._events.getAfter(e);return i&&Jt(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),e)),this._events.add({time:e,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,e),this}rampTo(t,e=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,s):this.linearRampTo(t,e,s),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const s=this._events.get(e);if(s&&s.type==="setTargetAtTime"){const i=this._events.getAfter(s.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){q(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,s,i,r){return s+(e-s)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,s,i,r){return e+(i-e)*((r-t)/(s-t))}_exponentialInterpolate(t,e,s,i,r){return e*Math.pow(i/e,(r-t)/(s-t))}}class D extends bt{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return $(this.input)?Be(this.input)||this.input instanceof z?1:this.input.numberOfInputs:0}get numberOfOutputs(){return $(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return $(t)&&(t instanceof D||Ae(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(s=>{s.channelCount=t.channelCount,s.channelCountMode=t.channelCountMode,s.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();q(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,s=0){return zt(this,t,e,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Hs("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,s=0){return Ho(this,t,e,s),this}chain(...t){return Yt(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),$(this.input)&&(this.input instanceof D?this.input.dispose():Ae(this.input)&&this.input.disconnect()),$(this.output)&&(this.output instanceof D?this.output.dispose():Ae(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Yt(...n){const t=n.shift();n.reduce((e,s)=>(e instanceof D?e.connect(s):Ae(e)&&zt(e,s),s),t)}function zt(n,t,e=0,s=0){for(q($(n),"Cannot connect from undefined node"),q($(t),"Cannot connect to undefined node"),(t instanceof D||Ae(t))&&q(t.numberOfInputs>0,"Cannot connect to node with no inputs"),q(n.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof D||t instanceof z;)$(t.input)&&(t=t.input);for(;n instanceof D;)$(n.output)&&(n=n.output);Be(t)?n.connect(t,e):n.connect(t,e,s)}function Ho(n,t,e=0,s=0){if($(t))for(;t instanceof D;)t=t.input;for(;!Ae(n);)$(n.output)&&(n=n.output);Be(t)?n.disconnect(t,e):Ae(t)?n.disconnect(t,e,s):n.disconnect()}class I extends D{constructor(){super(m(I.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=m(I.getDefaults(),arguments,["gain","units"]);this.gain=new z({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),P(this,"gain")}static getDefaults(){return Object.assign(D.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class ss extends D{constructor(t){super(t),this.onended=X,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new I({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const s=this.toSeconds(e);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(D.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:X})}_startGain(t,e=1){q(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=t+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+s):this._gainNode.gain.exponentialApproachValueAtTime(e,t,s)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){q(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.context.currentTime),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==X&&(this.onended(this),this.onended=X,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),q(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class ks extends ss{constructor(){super(m(ks.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=m(ks.getDefaults(),arguments,["offset"]);zt(this._source,this._gainNode),this.offset=new z({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(ss.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class L extends D{constructor(){super(m(L.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=m(L.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new ks({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(D.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,s=0){return Bn(this,t,e,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,s){return this._param.exponentialRampTo(t,e,s),this}linearRampTo(t,e,s){return this._param.linearRampTo(t,e,s),this}targetRampTo(t,e,s){return this._param.targetRampTo(t,e,s),this}exponentialApproachValueAtTime(t,e,s){return this._param.exponentialApproachValueAtTime(t,e,s),this}setTargetAtTime(t,e,s){return this._param.setTargetAtTime(t,e,s),this}setValueCurveAtTime(t,e,s,i){return this._param.setValueCurveAtTime(t,e,s,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,s){return this._param.rampTo(t,e,s),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function Bn(n,t,e,s){(t instanceof z||Be(t)||t instanceof L&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof L&&(t.overridden=!0)),zt(n,t,e,s)}class Tn extends z{constructor(){super(m(Tn.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new le(1/0),this._multiplier=1;const t=m(Tn.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(z.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,s){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/s,1));for(let a=0;a<=o;a++){const c=s*a+e,h=this._exponentialApproach(r.time,r.value,i,s,c);this.linearRampToValueAtTime(this._toType(h),c)}return this}setValueAtTime(t,e){const s=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(s),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const s=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(s),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const s=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max((e-i.time)*10,1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,h=this._exponentialInterpolate(i.time,i.value,e,s,c);this.linearRampToValueAtTime(this._toType(h),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Wt(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const s=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(s+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),s=this._events.get(e);return Math.max(this._getTicksUntilEvent(s,e),0)}getDurationOfTicks(t,e){const s=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-s}getTimeOfTick(t){const e=this._events.get(t,"ticks"),s=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&s&&s.type==="linearRampToValueAtTime"&&e.value!==s.value){const i=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(s.time))-i)/(s.time-e.time),a=Math.sqrt(Math.pow(i,2)-2*o*(e.ticks-t)),c=(-i+a)/o,h=(-i-a)/o;return(c>0?c:h)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const s=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(s);return this.getTicksAtTime(s+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class Sn extends L{constructor(){super(m(Sn.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=m(Sn.getDefaults(),arguments,["value"]);this.input=this._param=new Tn({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(L.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class kn extends bt{constructor(){super(m(kn.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new sn,this._tickOffset=new le;const t=m(kn.getDefaults(),arguments,["frequency"]);this.frequency=new Sn({context:this.context,units:t.units,value:t.frequency}),P(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},bt.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const s=this.toSeconds(t);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),$(e)&&this.setTicksAtTime(e,s)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const s=this._state.get(e);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&this._state.setStateAtTime("paused",e),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),s=this._state.getLastState("stopped",e),i={state:"paused",time:e};this._state.add(i);let r=s,o=0;return this._state.forEachBetween(s.time,e+this.sampleTime,a=>{let c=r.time;const h=this._tickOffset.get(a.time);h&&h.time>=r.time&&(o=h.ticks,c=h.time),r.state==="started"&&a.state!=="started"&&(o+=this.frequency.getTicksAtTime(a.time)-this.frequency.getTicksAtTime(c)),r=a}),this._state.remove(i),o}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),s=this.frequency.timeToTicks(t,e);this.setTicksAtTime(s,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),s={state:"paused",time:t};this._state.add(s);let i=e,r=0;return this._state.forEachBetween(e.time,t+this.sampleTime,o=>{let a=i.time;const c=this._tickOffset.get(o.time);c&&c.time>=i.time&&(r=c.seconds,a=c.time),i.state==="started"&&o.state!=="started"&&(r+=o.time-a),i=o}),this._state.remove(s),r}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const s=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(s.time,i.time),o=this.frequency.getTicksAtTime(r)+t-s.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,s){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,s),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),h=a-c;let u=Math.ceil(h)-h;u=Jt(u,1)?0:u;let l=this.frequency.getTimeOfTick(a+u);for(;l<e;){try{s(l,Math.round(this.getTicksAtTime(l)))}catch(p){r=p;break}l+=this.frequency.getDurationOfTicks(1,l)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class ns extends bt{constructor(){super(m(ns.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=X,this._lastUpdate=0,this._state=new sn("stopped"),this._boundLoop=this._loop.bind(this);const t=m(ns.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new kn({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,P(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(bt.getDefaults(),{callback:X,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){ur(this.context);const s=this.toSeconds(t);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,e),s<this._lastUpdate&&this.emit("start",s,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const s=this.toSeconds(e),i=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(i+t,s)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,s=>{switch(s.state){case"started":const i=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,i);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(t,e,(s,i)=>{this.callback(s,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Js.mixin(ns);class Bt extends D{constructor(){super(m(Bt.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=m(Bt.getDefaults(),arguments,["delayTime","maxDelay"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new z({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),P(this,"delayTime")}static getDefaults(){return Object.assign(D.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function ef(n,t,e=2,s=ct().sampleRate){return et(this,void 0,void 0,function*(){const i=ct(),r=new en(e,t,s);ni(r),yield n(r);const o=r.render();ni(i);const a=yield o;return new H(a)})}class nn extends we{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=m(nn.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const s=t.urls[e];this.add(e,s,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:X,onload:X,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return q(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,s=X,i=X){return se(e)?this._buffers.set(t.toString(),new H(this.baseUrl+e,s,i)):this._buffers.set(t.toString(),new H(e,s,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class Ds extends Ft{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return Le(super._frequencyToUnits(t))}_ticksToUnits(t){return Le(super._ticksToUnits(t))}_beatsToUnits(t){return Le(super._beatsToUnits(t))}_secondsToUnits(t){return Le(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return Yo(this.toMidi())}transpose(t){return new Ds(this.context,this.toMidi()+t)}}function sf(n,t){return new Ds(ct(),n,t)}class st extends gt{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function nf(n,t){return new st(ct(),n,t)}let Hd=class extends bt{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new le,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};Pn(n=>{n.draw=new Hd({context:n})});Ln(n=>{n.draw.dispose()});class Jd extends we{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){q($(t.time),"Events must have a time property"),q($(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new Kd(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const s of e)if(s.event===t){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let s,i=null;if(e>0)if(t.left.right===null)s=t.left,s.right=t.right,i=s;else{for(s=t.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,i=s.parent,s.left=t.left,s.right=t.right)}else if(t.right.left===null)s=t.right,s.left=t.left,i=s;else{for(s=t.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,i=s.parent,s.left=t.left,s.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=s:t.parent.right=s:this._setRoot(s),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const e=t.parent,s=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?s?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,s=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?s?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let s=e[0];for(let i=1;i<e.length;i++)e[i].low>s.low&&(s=e[i]);return s.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(s=>e.push(s)),e.forEach(s=>{s.event&&t(s.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const s=[];this._root.search(t,s),s.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const s=[];this._root.searchAfter(t,s),s.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class Kd{constructor(t,e,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const of=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class ge extends D{constructor(){super(m(ge.getDefaults(),arguments,["volume"])),this.name="Volume";const t=m(ge.getDefaults(),arguments,["volume"]);this.input=this.output=new I({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,P(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let tp=class ii extends D{constructor(){super(m(ii.getDefaults(),arguments)),this.name="Destination",this.input=new ge({context:this.context}),this.output=new I({context:this.context}),this.volume=this.input.volume;const t=m(ii.getDefaults(),arguments);Yt(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),Yt(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};Pn(n=>{n.destination=new tp({context:n})});Ln(n=>{n.destination.dispose()});class ep extends we{constructor(t){super(),this.name="TimelineValue",this._timeline=new le({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Ce{constructor(t,e){this.id=Ce._eventId++;const s=Object.assign(Ce.getDefaults(),e);this.transport=t,this.callback=s.callback,this._once=s.once,this.time=s.time}static getDefaults(){return{callback:X,once:!1,time:0}}invoke(t){this.callback&&(this.callback(t),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}Ce._eventId=0;class fr extends Ce{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(fr.getDefaults(),e);this.duration=new st(t.context,s.duration).valueOf(),this._interval=new st(t.context,s.interval).valueOf(),this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Ce.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvents(t){const e=this.transport.getTicksAtTime(t);e>=this.time&&e>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new st(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const e=this.transport.getTicksAtTime(t);e>this.time&&(this._nextTick=this.time+Math.ceil((e-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new st(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new st(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}let Jo=class ri extends bt{constructor(){super(m(ri.getDefaults(),arguments)),this.name="Transport",this._loop=new ep(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new le,this._repeatedEvents=new Jd,this._syncedSignals=[],this._swingAmount=0;const t=m(ri.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new ns({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),P(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(bt.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const s=e%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(s*Math.PI)*this._swingAmount;t+=new st(this.context,this._swingTicks*2/3).toSeconds()*i}this._timeline.forEachAtTime(e,s=>s.invoke(t))}schedule(t,e){const s=new Ce(this,{callback:t,time:new gt(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(t,e,s,i=1/0){const r=new fr(this,{callback:t,duration:new $t(this.context,i).toTicks(),interval:new $t(this.context,e).toTicks(),time:new gt(this.context,s).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const s=new Ce(this,{callback:t,once:!0,time:new gt(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(e,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new st(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let s;return $(e)&&(s=this.toTicks(e)),this._clock.start(t,s),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ct(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new $t(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new $t(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new st(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new st(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),s=this._clock.frequency.timeToTicks(t,e);this.ticks=s}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(e),i=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,e),r=e+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return Math.round(this._clock.getTicksAtTime(t))}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),s=this.getTicksAtTime(e),i=t-s%t;return this._clock.nextTickTime(i,e)}}syncSignal(t,e){if(!e){const i=this.now();if(t.getValueAtTime(i)!==0){const o=1/(60/this.bpm.getValueAtTime(i)/this.PPQ);e=t.getValueAtTime(i)/o}else e=0}const s=new I(e);return this.bpm.connect(s),s.connect(t._param),this._syncedSignals.push({initial:t.value,ratio:s,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const s=this._syncedSignals[e];s.signal===t&&(s.ratio.dispose(),s.signal.value=s.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),tn(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};Js.mixin(Jo);Pn(n=>{n.transport=new Jo({context:n})});Ln(n=>{n.transport.dispose()});class pt extends D{constructor(t){super(t),this.input=void 0,this._state=new sn("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=X,this._syncedStop=X,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new ge({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,P(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,onstop:X,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,s){let i=Wt(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")q(bn(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,s);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Kt(e,0)),r.duration=s?this.toSeconds(s):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,s)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else ur(this.context),this._start(i,e,s);return this}stop(t){let e=Wt(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||$(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const s=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(s)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,s){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(e>0){const s=this._state.get(e);if(s&&s.state==="started"&&s.time!==e){const i=e-this.toSeconds(s.time);let r;s.duration&&(r=this.toSeconds(s.duration)-i),this._start(t,this.toSeconds(s.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=X,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Oe extends ss{constructor(){super(m(Oe.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=m(Oe.getDefaults(),arguments,["url","onload"]);zt(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new z({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new H(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(ss.getDefaults(),{url:new H,loop:!1,loopEnd:0,loopStart:0,onload:X,onerror:X,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,s,i=1){q(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?e=Kt(e,this.loopStart):e=Kt(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),h=a-c;si(o,a)&&(o=(o-c)%h+c),Jt(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,zo(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),$(s)){let a=this.toSeconds(s);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Ne extends pt{constructor(){super(m(Ne.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=m(Ne.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(pt.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(q(t in Vr,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Vr[this._type];this._source=new Oe({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const Xe=44100*5,$n=2,de={brown:null,pink:null,white:null},Vr={get brown(){if(!de.brown){const n=[];for(let t=0;t<$n;t++){const e=new Float32Array(Xe);n[t]=e;let s=0;for(let i=0;i<Xe;i++){const r=Math.random()*2-1;e[i]=(s+.02*r)/1.02,s=e[i],e[i]*=3.5}}de.brown=new H().fromArray(n)}return de.brown},get pink(){if(!de.pink){const n=[];for(let t=0;t<$n;t++){const e=new Float32Array(Xe);n[t]=e;let s,i,r,o,a,c,h;s=i=r=o=a=c=h=0;for(let u=0;u<Xe;u++){const l=Math.random()*2-1;s=.99886*s+l*.0555179,i=.99332*i+l*.0750759,r=.969*r+l*.153852,o=.8665*o+l*.3104856,a=.55*a+l*.5329522,c=-.7616*c-l*.016898,e[u]=s+i+r+o+a+c+h+l*.5362,e[u]*=.11,h=l*.115926}}de.pink=new H().fromArray(n)}return de.pink},get white(){if(!de.white){const n=[];for(let t=0;t<$n;t++){const e=new Float32Array(Xe);n[t]=e;for(let s=0;s<Xe;s++)e[s]=Math.random()*2-1}de.white=new H().fromArray(n)}return de.white}};class vs extends D{constructor(){super(m(vs.getDefaults(),arguments,["volume"])),this.name="UserMedia";const t=m(vs.getDefaults(),arguments,["volume"]);this._volume=this.output=new ge({context:this.context,volume:t.volume}),this.volume=this._volume.volume,P(this,"volume"),this.mute=t.mute}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,volume:0})}open(t){return et(this,void 0,void 0,function*(){q(vs.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const e=yield vs.enumerateDevices();Xt(t)?this._device=e[t]:(this._device=e.find(r=>r.label===t||r.deviceId===t),!this._device&&e.length>0&&(this._device=e[0]),q($(this._device),`No matching device ${t}`));const s={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(s.audio.deviceId=this._device.deviceId);const i=yield navigator.mediaDevices.getUserMedia(s);if(!this._stream){this._stream=i;const r=this.context.createMediaStreamSource(i);zt(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(t=>{t.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return et(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(e=>e.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return $(navigator.mediaDevices)&&$(navigator.mediaDevices.getUserMedia)}}function Ze(n,t){return et(this,void 0,void 0,function*(){const e=t/n.context.sampleRate,s=new en(1,e,n.context.sampleRate);return new n.constructor(Object.assign(n.get(),{frequency:2/e,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class As extends ss{constructor(){super(m(As.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=m(As.getDefaults(),arguments,["frequency","type"]);zt(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new z({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new z({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),P(this,["frequency","detune"])}static getDefaults(){return Object.assign(ss.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class at extends pt{constructor(){super(m(at.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=m(at.getDefaults(),arguments,["frequency","type"]);this.frequency=new L({context:this.context,units:"frequency",value:t.frequency}),P(this,"frequency"),this.detune=new L({context:this.context,units:"cents",value:t.detune}),P(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(pt.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),s=new As({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return at._periodicWaveCache.find(e=>e.phase===this._phase&&Bd(e.partials,this._partials));{const t=at._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const s=this._getCachedPeriodicWave();if($(s)){const{partials:i,wave:r}=s;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),at._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),at._periodicWaveCache.length>100&&at._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Tt(t,0);let e=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(e=s[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const h=2/(c*Math.PI);let u;switch(t){case"sine":u=c<=a?1:0,this._partials[c-1]=u;break;case"square":u=c&1?2*h:0,this._partials[c-1]=u;break;case"sawtooth":u=h*(c&1?1:-1),this._partials[c-1]=u;break;case"triangle":c&1?u=2*(h*h)*(c-1>>1&1?-1:1):u=0,this._partials[c-1]=u;break;case"custom":u=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}u!==0?(r[c]=-u*Math.sin(e*c),o[c]=u*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,s){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*s)+e[o]*Math.sin(o*s);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let s=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)s=Math.max(this._inverseFFT(t,e,o/r*i),s);return Uo(-this._inverseFFT(t,e,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}at._periodicWaveCache=[];class Ut extends D{constructor(){super(Object.assign(m(Ut.getDefaults(),arguments,["context"])))}connect(t,e=0,s=0){return Bn(this,t,e,s),this}}class ne extends Ut{constructor(){super(Object.assign(m(ne.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=m(ne.getDefaults(),arguments,["mapping","length"]);Ct(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):qd(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(L.getDefaults(),{length:1024})}setMap(t,e=1024){const s=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;s[i]=t(o,i)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(s=>s.includes(t));q(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class mr extends Ut{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new ne({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ht extends L{constructor(){super(Object.assign(m(ht.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=m(ht.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new I({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(L.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Cs extends pt{constructor(){super(m(Cs.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new mr({context:this.context}),this._modulationNode=new I({context:this.context});const t=m(Cs.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new at({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new at({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ht({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),P(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(at.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class is extends pt{constructor(){super(m(is.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new I({context:this.context,gain:0});const t=m(is.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new at({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new L({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new at({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ht({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new ht({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),P(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(at.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class rs extends pt{constructor(){super(m(rs.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new I({context:this.context,gain:0}),this._thresh=new ne({context:this.context,mapping:e=>e<=0?-1:1});const t=m(rs.getDefaults(),arguments,["frequency","width"]);this.width=new L({context:this.context,units:"audioRange",value:t.width}),this._triangle=new at({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),P(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(pt.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Os extends pt{constructor(){super(m(Os.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=m(Os.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new L({context:this.context,units:"frequency",value:t.frequency}),this.detune=new L({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,P(this,["frequency","detune"])}static getDefaults(){return Object.assign(at.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,s=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+s*r)}}get count(){return this._oscillators.length}set count(t){if(Tt(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const s=new at({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):X});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[e]=s}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,s)=>e.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class Ns extends pt{constructor(){super(m(Ns.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new ht({context:this.context,value:2});const t=m(Ns.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new rs({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new at({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),P(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(pt.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Pr={am:Cs,fat:Os,fm:is,oscillator:at,pulse:rs,pwm:Ns};class ye extends pt{constructor(){super(m(ye.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=m(ye.getDefaults(),arguments,["frequency","type"]);this.frequency=new L({context:this.context,units:"frequency",value:t.frequency}),this.detune=new L({context:this.context,units:"cents",value:t.detune}),P(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(at.getDefaults(),is.getDefaults(),Cs.getDefaults(),Os.getDefaults(),rs.getDefaults(),Ns.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=Pr[t],s=this.now();if(this._oscillator){const i=this._oscillator;i.stop(s),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof Pr[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&Xt(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&Xt(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&se(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return et(this,void 0,void 0,function*(){return Ze(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class fs extends L{constructor(){super(Object.assign(m(fs.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new I({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,Yt(this._constantSource,this._sum)}static getDefaults(){return Object.assign(L.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class ve extends Ut{constructor(){super(Object.assign(m(ve.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=m(ve.getDefaults(),arguments,["min","max"]);this._mult=this.input=new ht({context:this.context,value:t.max-t.min}),this._add=this.output=new fs({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ut.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class _r extends Ut{constructor(){super(Object.assign(m(_r.getDefaults(),arguments))),this.name="Zero",this._gain=new I({context:this.context}),this.output=this._gain,this.input=void 0,zt(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Ho(this.context.getConstant(0),this._gain),this}}class Rt extends D{constructor(){super(m(Rt.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=z.prototype._fromType,this._toType=z.prototype._toType,this._is=z.prototype._is,this._clampValue=z.prototype._clampValue;const t=m(Rt.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new at(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new I({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new L({context:this.context,units:"audioRange",value:0}),this._zeros=new _r({context:this.context}),this._a2g=new mr({context:this.context}),this._scaler=this.output=new ve({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),P(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(at.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,s=this.max;this._units=t,this.min=e,this.max=s}get state(){return this._oscillator.state}connect(t,e,s){return(t instanceof z||t instanceof L)&&(this.convert=t.convert,this.units=t.units),Bn(this,t,e,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Ko(n,t=1/0){const e=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Tt(r,n,t),e.set(this,r)}})}}function xe(n,t=1/0){const e=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Tt(this.toSeconds(r),n,t),e.set(this,r)}})}}class os extends pt{constructor(){super(m(os.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=m(os.getDefaults(),arguments,["url","onload"]);this._buffer=new H({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(pt.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:X,onerror:X,playbackRate:1,reverse:!1})}load(t){return et(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=X){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,s){return super.start(t,e,s),this}_start(t,e,s){this._loop?e=Kt(e,this._loopStart):e=Kt(e,0);const i=this.toSeconds(e),r=s;s=Kt(s,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(s);o=o/this._playbackRate,t=this.toSeconds(t);const a=new Oe({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Wt(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(s=>s.stop(e))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){this._stop(t),this._start(t,e,s)}seek(t,e){const s=this.toSeconds(e);if(this._state.getValueAtTime(s)==="started"){const i=this.toSeconds(t);this._stop(s),this._start(s,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),s=this._state.getNextState("stopped",e);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}re([xe(0)],os.prototype,"fadeIn",void 0);re([xe(0)],os.prototype,"fadeOut",void 0);class oi extends D{constructor(){super(m(oi.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const t=m(oi.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new ge({context:this.context,volume:t.volume}),this.volume=this._volume.volume,P(this,"volume"),this._buffers=new nn({urls:t.urls,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.mute=t.mute,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(pt.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:X,onerror:X,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._players.forEach(e=>{e.fadeIn=t})}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._players.forEach(e=>{e.fadeOut=t})}get state(){return Array.from(this._players).some(([e,s])=>s.state==="started")?"started":"stopped"}has(t){return this._buffers.has(t)}player(t){if(q(this.has(t),`No Player with the name ${t} exists on this object`),!this._players.has(t)){const e=new os({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(t)}).connect(this.output);this._players.set(t,e)}return this._players.get(t)}get loaded(){return this._buffers.loaded}add(t,e,s){return q(!this._buffers.has(t),"A buffer with that name already exists on this object"),this._buffers.add(t,e,s),this}stopAll(t){return this._players.forEach(e=>e.stop(t)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(t=>t.dispose()),this._buffers.dispose(),this}}class ai extends pt{constructor(){super(m(ai.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const t=m(ai.getDefaults(),arguments,["url","onload"]);this.buffer=new H({onload:t.onload,onerror:t.onerror,reverse:t.reverse,url:t.url}),this._clock=new ns({context:this.context,callback:this._tick.bind(this),frequency:1/t.grainSize}),this._playbackRate=t.playbackRate,this._grainSize=t.grainSize,this._overlap=t.overlap,this.detune=t.detune,this.overlap=t.overlap,this.loop=t.loop,this.playbackRate=t.playbackRate,this.grainSize=t.grainSize,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.reverse=t.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(pt.getDefaults(),{onload:X,onerror:X,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(t,e,s){e=Kt(e,0),e=this.toSeconds(e),t=this.toSeconds(t);const i=1/this._clock.frequency.getValueAtTime(t);this._clock.start(t,e/i),s&&this.stop(t+this.toSeconds(s))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){this._stop(t),this._start(t,e,s)}_stop(t){this._clock.stop(t)}_onstop(t){this._activeSources.forEach(e=>{e.fadeOut=0,e.stop(t)}),this.onstop(this)}_tick(t){const e=this._clock.getTicksAtTime(t),s=e*this._grainSize;if(this.log("offset",s),!this.loop&&s>this.buffer.duration){this.stop(t);return}const i=s<this._overlap?0:this._overlap,r=new Oe({context:this.context,url:this.buffer,fadeIn:i,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:Ss(this.detune/100)}).connect(this.output);r.start(t,this._grainSize*e),r.stop(t+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const o=this._activeSources.indexOf(r);o!==-1&&this._activeSources.splice(o,1)}}get playbackRate(){return this._playbackRate}set playbackRate(t){Tt(t,.001),this._playbackRate=t,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(t){this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._loopStart=this.toSeconds(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this.buffer.loaded&&Tt(this.toSeconds(t),0,this.buffer.duration),this._loopEnd=this.toSeconds(t)}get reverse(){return this.buffer.reverse}set reverse(t){this.buffer.reverse=t}get grainSize(){return this._grainSize}set grainSize(t){this._grainSize=this.toSeconds(t),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(t){const e=this.toSeconds(t);Tt(e,0),this._overlap=e}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(t=>t.dispose()),this}}class sp extends Ut{constructor(){super(...arguments),this.name="Abs",this._abs=new ne({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class np extends Ut{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new ne({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ta extends Ut{constructor(){super(...arguments),this.name="Negate",this._multiply=new ht({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class ms extends L{constructor(){super(Object.assign(m(ms.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new I({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new ta({context:this.context}),this.subtrahend=this._param,Yt(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(L.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class gr extends Ut{constructor(){super(Object.assign(m(gr.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new ne({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new ht({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class Dn extends L{constructor(){super(Object.assign(m(Dn.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const t=m(Dn.getDefaults(),arguments,["value"]);this._subtract=this.input=new ms({context:this.context,value:t.value}),this._gtz=this.output=new gr({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,P(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(L.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Es extends Ut{constructor(){super(Object.assign(m(Es.getDefaults(),arguments,["value"]))),this.name="Pow";const t=m(Es.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new ne({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Ut.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class An extends ve{constructor(){super(Object.assign(m(An.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const t=m(An.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new Es({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(ve.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class af extends L{constructor(){super(m(L.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const t=m(L.getDefaults(),arguments,["value","units"]);this._lastVal=t.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new ks({context:this.context,offset:t.value,units:t.units}).start(0),this.setValueAtTime(t.value,0)}_onTick(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==e&&(this._lastVal=e,this._constantSource.offset.setValueAtTime(e,t))}_anchorValue(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal=e,this._constantSource.offset.cancelAndHoldAtTime(t),this._constantSource.offset.setValueAtTime(e,t)}getValueAtTime(t){const e=new gt(this.context,t).toSeconds();return super.getValueAtTime(e)}setValueAtTime(t,e){const s=new gt(this.context,e).toSeconds();return super.setValueAtTime(t,s),this}linearRampToValueAtTime(t,e){const s=new gt(this.context,e).toSeconds();return super.linearRampToValueAtTime(t,s),this}exponentialRampToValueAtTime(t,e){const s=new gt(this.context,e).toSeconds();return super.exponentialRampToValueAtTime(t,s),this}setTargetAtTime(t,e,s){const i=new gt(this.context,e).toSeconds();return super.setTargetAtTime(t,i,s),this}cancelScheduledValues(t){const e=new gt(this.context,t).toSeconds();return super.cancelScheduledValues(e),this}setValueCurveAtTime(t,e,s,i){const r=new gt(this.context,e).toSeconds();return s=this.toSeconds(s),super.setValueCurveAtTime(t,r,s,i),this}cancelAndHoldAtTime(t){const e=new gt(this.context,t).toSeconds();return super.cancelAndHoldAtTime(e),this}setRampPoint(t){const e=new gt(this.context,t).toSeconds();return super.setRampPoint(e),this}exponentialRampTo(t,e,s){const i=new gt(this.context,s).toSeconds();return super.exponentialRampTo(t,e,i),this}linearRampTo(t,e,s){const i=new gt(this.context,s).toSeconds();return super.linearRampTo(t,e,i),this}targetRampTo(t,e,s){const i=new gt(this.context,s).toSeconds();return super.targetRampTo(t,e,i),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class Dt extends D{constructor(){super(m(Dt.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new L({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=m(Dt.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(D.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(se(t))return t;{let s;for(s in hn)if(hn[s][e]===t)return s;return t}}_setCurve(t,e,s){if(se(s)&&Reflect.has(hn,s)){const i=hn[s];De(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else if(Ct(s)&&t!=="_decayCurve")this[t]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._decayCurve}set decayCurve(t){q(["linear","exponential"].some(e=>e===t),`Invalid envelope curve: ${t}`),this._decayCurve=t}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,i,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,i,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,t):(q(Ct(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,s,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),this.triggerAttack(e,s),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,s=0){return Bn(this,t,e,s),this}asArray(t=1024){return et(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,s=new en(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:s}));return c._sig.toDestination(),c.triggerAttackRelease(e*(i+o)/a,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}re([xe(0)],Dt.prototype,"attack",void 0);re([xe(0)],Dt.prototype,"decay",void 0);re([Ko(0,1)],Dt.prototype,"sustain",void 0);re([xe(0)],Dt.prototype,"release",void 0);const hn=(()=>{let t,e;const s=[];for(t=0;t<128;t++)s[t]=Math.sin(t/127*(Math.PI/2));const i=[],r=6.4;for(t=0;t<127;t++){e=t/127;const p=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;i[t]=p/10+e*.83}i[127]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/127*a)/a;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const h=[];for(t=0;t<128;t++){e=t/127;const p=Math.pow(e,3)*4+.2,f=Math.cos(p*Math.PI*2*e);h[t]=Math.abs(f*(1-e))}function u(p){const f=new Array(p.length);for(let d=0;d<p.length;d++)f[d]=1-p[d];return f}function l(p){return p.slice(0).reverse()}return{bounce:{In:u(h),Out:h},cosine:{In:s,Out:l(s)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:u(i)},sine:{In:c,Out:u(c)},step:{In:o,Out:u(o)}}})();class Gt extends D{constructor(){super(m(Gt.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const t=m(Gt.getDefaults(),arguments);this._volume=this.output=new ge({context:this.context,volume:t.volume}),this.volume=this._volume.volume,P(this,"volume")}static getDefaults(){return Object.assign(D.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const s=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,s.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(t,e,s,i){const r=this.toSeconds(s),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class kt extends Gt{constructor(){super(m(kt.getDefaults(),arguments));const t=m(kt.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(Gt.getDefaults(),{detune:0,onsilence:X,portamento:0})}triggerAttack(t,e,s=1){this.log("triggerAttack",t,e,s);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,s),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const s=this.toSeconds(e),i=t instanceof Ft?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,s)}else this.frequency.setValueAtTime(i,s);return this}}re([xe(0)],kt.prototype,"portamento",void 0);class rn extends Dt{constructor(){super(m(rn.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new I({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Ee extends kt{constructor(){super(m(Ee.getDefaults(),arguments)),this.name="Synth";const t=m(Ee.getDefaults(),arguments);this.oscillator=new ye(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new rn(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),P(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(kt.getDefaults(),{envelope:Object.assign(St(Dt.getDefaults(),Object.keys(D.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(St(ye.getDefaults(),[...Object.keys(pt.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+s+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class as extends kt{constructor(){super(m(as.getDefaults(),arguments)),this.name="ModulationSynth";const t=m(as.getDefaults(),arguments);this._carrier=new Ee({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Ee({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new L({context:this.context,units:"frequency"}),this.detune=new L({context:this.context,value:t.detune,units:"cents"}),this.harmonicity=new ht({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new I({context:this.context,gain:0}),P(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(kt.getDefaults(),{harmonicity:3,oscillator:Object.assign(St(ye.getDefaults(),[...Object.keys(pt.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(St(Dt.getDefaults(),Object.keys(D.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(St(ye.getDefaults(),[...Object.keys(pt.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(St(Dt.getDefaults(),Object.keys(D.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class ea extends as{constructor(){super(m(ea.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new mr({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class Ms extends D{constructor(){super(m(Ms.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=m(Ms.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new z({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new z({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new z({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new z({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(D.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){q(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const c=Math.pow(o/t,2)*19980+20;e[o]=c}const s=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,s,i),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class jt extends D{constructor(){super(m(jt.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new I({context:this.context}),this.output=new I({context:this.context}),this._filters=[];const t=m(jt.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new L({context:this.context,units:"positive",value:t.Q}),this.frequency=new L({context:this.context,units:"frequency",value:t.frequency}),this.detune=new L({context:this.context,units:"cents",value:t.detune}),this.gain=new L({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,P(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(D.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){q(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(s=>s.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=Xt(t)?t:parseInt(t,10),s=[-12,-24,-48,-96];let i=s.indexOf(e);q(i!==-1,`rolloff can only be ${s.join(", ")}`),i+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new Ms({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,Yt(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new Ms({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,o)=>s[o]*=r)}),e.dispose(),s}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),tn(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class Rs extends Dt{constructor(){super(m(Rs.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const t=m(Rs.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new Es({context:this.context,value:t.exponent}),this._scale=this.output=new ve({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Dt.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);Tt(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class je extends kt{constructor(){super(m(je.getDefaults(),arguments)),this.name="MonoSynth";const t=m(je.getDefaults(),arguments);this.oscillator=new ye(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new jt(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new Rs(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new rn(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),P(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(kt.getDefaults(),{envelope:Object.assign(St(Dt.getDefaults(),Object.keys(D.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(St(jt.getDefaults(),Object.keys(D.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(St(Rs.getDefaults(),Object.keys(D.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(St(ye.getDefaults(),Object.keys(pt.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+s+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class ci extends kt{constructor(){super(m(ci.getDefaults(),arguments)),this.name="DuoSynth";const t=m(ci.getDefaults(),arguments);this.voice0=new je(Object.assign(t.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new je(Object.assign(t.voice1,{context:this.context})),this.harmonicity=new ht({context:this.context,units:"positive",value:t.harmonicity}),this._vibrato=new Rt({frequency:t.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new I({context:this.context,units:"normalRange",gain:t.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new L({context:this.context,units:"frequency",value:440}),this.detune=new L({context:this.context,units:"cents",value:t.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),P(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(t){return t=this.toSeconds(t),this.voice0.envelope.getValueAtTime(t)+this.voice1.envelope.getValueAtTime(t)}static getDefaults(){return Qt(kt.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:Qt(St(je.getDefaults(),Object.keys(kt.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:Qt(St(je.getDefaults(),Object.keys(kt.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(t,e){this.voice0._triggerEnvelopeAttack(t,e),this.voice1._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this.voice0._triggerEnvelopeRelease(t),this.voice1._triggerEnvelopeRelease(t),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class hi extends as{constructor(){super(m(hi.getDefaults(),arguments)),this.name="FMSynth";const t=m(hi.getDefaults(),arguments);this.modulationIndex=new ht({context:this.context,value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(as.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const Lr=[1,1.483,1.932,2.546,2.63,3.897];class ui extends kt{constructor(){super(m(ui.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const t=m(ui.getDefaults(),arguments);this.detune=new L({context:this.context,units:"cents",value:t.detune}),this.frequency=new L({context:this.context,units:"frequency"}),this._amplitude=new I({context:this.context,gain:0}).connect(this.output),this._highpass=new jt({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let e=0;e<Lr.length;e++){const s=new is({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:"square",onstop:e===0?()=>this.onsilence(this):X,type:"square"});s.connect(this._highpass),this._oscillators[e]=s;const i=new ht({context:this.context,value:Lr[e]});this._freqMultipliers[e]=i,this.frequency.chain(i,s.frequency),this.detune.connect(s.detune)}this._filterFreqScaler=new ve({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new Dt({attack:t.envelope.attack,attackCurve:"linear",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return Qt(kt.getDefaults(),{envelope:Object.assign(St(Dt.getDefaults(),Object.keys(D.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach(s=>s.start(t)),this.envelope.sustain===0&&this._oscillators.forEach(s=>{s.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach(e=>e.stop(t+this.toSeconds(this.envelope.release))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach(e=>e.modulationIndex.value=t)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach(e=>e.harmonicity.value=t)}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach(t=>t.dispose()),this._freqMultipliers.forEach(t=>t.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class Is extends Ee{constructor(){super(m(Is.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=m(Is.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,P(this,["oscillator","envelope"])}static getDefaults(){return Qt(kt.getDefaults(),Ee.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const s=this.toSeconds(e),i=this.toFrequency(t instanceof Ft?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,s),this.oscillator.frequency.exponentialRampToValueAtTime(i,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}re([Ko(0)],Is.prototype,"octaves",void 0);re([xe(0)],Is.prototype,"pitchDecay",void 0);class li extends Gt{constructor(){super(m(li.getDefaults(),arguments)),this.name="NoiseSynth";const t=m(li.getDefaults(),arguments);this.noise=new Ne(Object.assign({context:this.context},t.noise)),this.envelope=new rn(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Gt.getDefaults(),{envelope:Object.assign(St(Dt.getDefaults(),Object.keys(D.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(St(Ne.getDefaults(),Object.keys(pt.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),this.envelope.sustain===0&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,s),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const yr=new Set;function vr(n){yr.add(n)}function sa(n,t){const e=`registerProcessor("${n}", ${t})`;yr.add(e)}function ip(){return Array.from(yr).join(`
`)}class di extends D{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=X;const e=URL.createObjectURL(new Blob([ip()],{type:"text/javascript"})),s=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e,s).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(s,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const rp=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;vr(rp);const op=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;vr(op);const ap=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;vr(ap);const na="feedback-comb-filter",cp=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;sa(na,cp);class qs extends di{constructor(){super(m(qs.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const t=m(qs.getDefaults(),arguments,["delayTime","resonance"]);this.input=new I({context:this.context}),this.output=new I({context:this.context}),this.delayTime=new z({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new z({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),P(this,["resonance","delayTime"])}_audioWorkletName(){return na}static getDefaults(){return Object.assign(D.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){Yt(this.input,t,this.output);const e=t.parameters.get("delayTime");this.delayTime.setParam(e);const s=t.parameters.get("feedback");this.resonance.setParam(s)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class Fs extends D{constructor(){super(m(Fs.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const t=m(Fs.getDefaults(),arguments,["frequency","type"]);this._frequency=t.frequency,this._type=t.type,this.input=new I({context:this.context}),this.output=new I({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(D.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),s=1/(2*Math.PI*e);if(this._type==="lowpass"){const i=1/(s*this.context.sampleRate),r=i-1;this._filter=this.context.createIIRFilter([i,0],[1,r])}else{const i=1/(s*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,i])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(t),t.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let r=0;r<t;r++){const a=Math.pow(r/t,2)*19980+20;e[r]=a}const s=new Float32Array(t),i=new Float32Array(t);return this._filter.getFrequencyResponse(e,s,i),s}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class Vs extends D{constructor(){super(m(Vs.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const t=m(Vs.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new qs({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new Fs({context:this.context,frequency:t.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(D.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class pi extends Gt{constructor(){super(m(pi.getDefaults(),arguments)),this.name="PluckSynth";const t=m(pi.getDefaults(),arguments);this._noise=new Ne({context:this.context,type:"pink"}),this.attackNoise=t.attackNoise,this._lfcf=new Vs({context:this.context,dampening:t.dampening,resonance:t.resonance}),this.resonance=t.resonance,this.release=t.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return Qt(Gt.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(t){this._lfcf.dampening=t}triggerAttack(t,e){const s=this.toFrequency(t);e=this.toSeconds(e);const i=1/s;return this._lfcf.delayTime.setValueAtTime(i,e),this._noise.start(e),this._noise.stop(e+i*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(e),this._lfcf.resonance.setValueAtTime(this.resonance,e),this}triggerRelease(t){return this._lfcf.resonance.linearRampTo(0,this.release,t),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class fi extends Gt{constructor(){super(m(fi.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const t=m(fi.getDefaults(),arguments,["voice","options"]);q(!Xt(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const s=this._voices.indexOf(this._dummyVoice);this._voices.splice(s,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Gt.getDefaults(),{maxPolyphony:32,options:{},voice:Ee})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex(s=>s.voice===t);this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return t.connect(this.output),this._voices.push(t),t}else Hs("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,s){t.forEach(i=>{const r=new Ds(this.context,i).toMidi(),o=this._getNextAvailableVoice();o&&(o.triggerAttack(i,e,s),this._activeVoices.push({midi:r,voice:o,released:!1}),this.log("triggerAttack",i,e))})}_triggerRelease(t,e){t.forEach(s=>{const i=new Ds(this.context,s).toMidi(),r=this._activeVoices.find(({midi:o,released:a})=>o===i&&!a);r&&(r.voice.triggerRelease(e),r.released=!0,this.log("triggerRelease",s,e))})}_scheduleEvent(t,e,s,i){q(!this.disposed,"Synth was already disposed"),s<=this.now()?t==="attack"?this._triggerAttack(e,s,i):this._triggerRelease(e,s):this.context.setTimeout(()=>{this._scheduleEvent(t,e,s,i)},s-this.now())}triggerAttack(t,e,s){Array.isArray(t)||(t=[t]);const i=this.toSeconds(e);return this._scheduleEvent("attack",t,i,s),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const s=this.toSeconds(e);return this._scheduleEvent("release",t,s),this}triggerAttackRelease(t,e,s,i){const r=this.toSeconds(s);if(this.triggerAttack(t,r,i),Ct(e)){q(Ct(t),"If the duration is an array, the notes must also be an array"),t=t;for(let o=0;o<t.length;o++){const a=e[Math.min(o,e.length-1)],c=this.toSeconds(a);q(c>0,"The duration must be greater than 0"),this.triggerRelease(t[o],r+c)}}else{const o=this.toSeconds(e);q(o>0,"The duration must be greater than 0"),this.triggerRelease(t,r+o)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(t){const e=St(t,["onsilence","context"]);return this.options=Qt(this.options,e),this._voices.forEach(s=>s.set(e)),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach(({voice:s})=>{s.triggerRelease(e)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(t=>t.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Ps extends Gt{constructor(){super(m(Ps.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=m(Ps.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(s=>{const i=parseInt(s,10);if(q(cn(s)||Xt(i)&&isFinite(i),`url key is neither a note or midi pitch: ${s}`),cn(s)){const r=new Ft(this.context,s).toMidi();e[r]=t.urls[s]}else Xt(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new nn({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(Gt.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:X,onerror:X,release:.1,urls:{}})}_findClosest(t){let s=0;for(;s<96;){if(this._buffers.has(t+s))return-s;if(this._buffers.has(t-s))return s;s++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,s=1){return this.log("triggerAttack",t,e,s),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=Xo(new Ft(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),h=o-c,u=this._buffers.get(h),l=Ss(c+a),p=new Oe({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:l}).connect(this.output);p.start(e,0,u.duration/l,s),Ct(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(p),p.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),d=f.indexOf(p);d!==-1&&f.splice(d,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(s=>{const i=new Ft(this.context,s).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,s,i=1){const r=this.toSeconds(s);return this.triggerAttack(t,r,i),Ct(e)?(q(Ct(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,s){if(q(cn(t)||isFinite(t),`note must be a pitch or midi: ${t}`),cn(t)){const i=new Ft(this.context,t).toMidi();this._buffers.add(i,e,s)}else this._buffers.add(t,e,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}re([xe(0)],Ps.prototype,"attack",void 0);re([xe(0)],Ps.prototype,"release",void 0);class oe extends bt{constructor(){super(m(oe.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new sn("stopped"),this._startOffset=0;const t=m(oe.getDefaults(),arguments,["callback","value"]);this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(bt.getDefaults(),{callback:X,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,e=>{let s;if(e.state==="started"){e.id!==-1&&this.context.transport.clear(e.id);const i=e.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||Xt(this._loop)&&this._loop>1){s=1/0,Xt(this._loop)&&(s=this._loop*this._getLoopDuration());const r=this._state.getAfter(i);r!==null&&(s=Math.min(s,r.time-i)),s!==1/0&&(this._state.setStateAtTime("stopped",i+s+1,{id:-1}),s=new st(this.context,s));const o=new st(this.context,this._getLoopDuration());e.id=this.context.transport.scheduleRepeat(this._tick.bind(this),o,new st(this.context,i),s)}else e.id=this.context.transport.schedule(this._tick.bind(this),new st(this.context,i))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return this._state.getValueAtTime(e)==="stopped"&&(this._state.add({id:-1,state:"started",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if(this._state.getValueAtTime(e)==="started"){this._state.setStateAtTime("stopped",e,{id:-1});const s=this._state.getBefore(e);let i=e;s!==null&&(i=s.time),this._rescheduleEvents(i)}return this}cancel(t){t=Kt(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,s=>{this.context.transport.clear(s.id)}),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&this._state.getValueAtTime(e)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let s=.02;Wo(this.humanize)||(s=this.toSeconds(this.humanize)),t+=(Math.random()*2-1)*s}this.callback(t,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new st(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new st(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(e!==null&&e.state==="started"){const s=this._getLoopDuration();return(t-e.time)%s/s}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Ls extends bt{constructor(){super(m(Ls.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const t=m(Ls.getDefaults(),arguments,["callback","interval"]);this._event=new oe({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(bt.getDefaults(),{interval:"4n",callback:X,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(t){t===1/0?this._event.loop=!0:this._event.loop=t}dispose(){return super.dispose(),this._event.dispose(),this}}class ws extends oe{constructor(){super(m(ws.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new sn("stopped"),this._events=new Set;const t=m(ws.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,t.events.forEach(e=>{Ct(e)?this.add(e[0],e[1]):this.add(e)})}static getDefaults(){return Object.assign(oe.getDefaults(),{events:[]})}start(t,e){const s=this.toTicks(t);if(this._state.getValueAtTime(s)!=="started"){e=Kt(e,this._loop?this._loopStart:0),this._loop?e=Kt(e,this._loopStart):e=Kt(e,0);const i=this.toTicks(e);this._state.add({id:-1,offset:i,state:"started",time:s}),this._forEach(r=>{this._startNote(r,s,i)})}return this}_startNote(t,e,s){e-=s,this._loop?t.startOffset>=this._loopStart&&t.startOffset<this._loopEnd?(t.startOffset<s&&(e+=this._getLoopDuration()),t.start(new st(this.context,e))):t.startOffset<this._loopStart&&t.startOffset>=s&&(t.loop=!1,t.start(new st(this.context,e))):t.startOffset>=s&&t.start(new st(this.context,e))}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t,this._forEach(e=>{e.startOffset+=this._startOffset})}stop(t){const e=this.toTicks(t);return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._forEach(s=>{s.stop(t)}),this}at(t,e){const s=new gt(this.context,t).toTicks(),i=new st(this.context,1).toSeconds(),r=this._events.values();let o=r.next();for(;!o.done;){const a=o.value;if(Math.abs(s-a.startOffset)<i)return $(e)&&(a.value=e),a;o=r.next()}return $(e)?(this.add(t,e),this.at(t)):null}add(t,e){t instanceof Object&&Reflect.has(t,"time")&&(e=t,t=e.time);const s=this.toTicks(t);let i;return e instanceof oe?(i=e,i.callback=this._tick.bind(this)):i=new oe({callback:this._tick.bind(this),context:this.context,value:e}),i.startOffset=s,i.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(i),this._restartEvent(i),this}_restartEvent(t){this._state.forEach(e=>{e.state==="started"?this._startNote(t,e.time,e.offset):t.stop(new st(this.context,e.time))})}remove(t,e){return De(t)&&t.hasOwnProperty("time")&&(e=t,t=e.time),t=this.toTicks(t),this._events.forEach(s=>{s.startOffset===t&&(Wt(e)||$(e)&&s.value===e)&&(this._events.delete(s),s.dispose())}),this}clear(){return this._forEach(t=>t.dispose()),this._events.clear(),this}cancel(t){return this._forEach(e=>e.cancel(t)),this._state.cancel(this.toTicks(t)),this}_forEach(t){return this._events&&this._events.forEach(e=>{e instanceof ws?e._forEach(t):t(e)}),this}_setAll(t,e){this._forEach(s=>{s[t]=e})}_tick(t,e){this.mute||this.callback(t,e)}_testLoopBoundries(t){this._loop&&(t.startOffset<this._loopStart||t.startOffset>=this._loopEnd)?t.cancel(0):t.state==="stopped"&&this._restartEvent(t)}get probability(){return this._probability}set probability(t){this._probability=t,this._setAll("probability",t)}get humanize(){return this._humanize}set humanize(t){this._humanize=t,this._setAll("humanize",t)}get loop(){return this._loop}set loop(t){this._loop=t,this._forEach(e=>{e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.loop=t,this._testLoopBoundries(e)})}get loopEnd(){return new st(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopEnd=t,this._testLoopBoundries(e)})}get loopStart(){return new st(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopStart=this.loopStart,this._testLoopBoundries(e)})}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._setAll("playbackRate",t)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*hp(n){let t=0;for(;t<n.length;)t=_s(t,n),yield n[t],t++}function*up(n){let t=n.length-1;for(;t>=0;)t=_s(t,n),yield n[t],t--}function*ys(n,t){for(;;)yield*t(n)}function _s(n,t){return Uo(n,0,t.length-1)}function*jr(n,t){let e=t?0:n.length-1;for(;;)e=_s(e,n),yield n[e],t?(e++,e>=n.length-1&&(t=!1)):(e--,e<=0&&(t=!0))}function*lp(n){let t=0,e=0;for(;t<n.length;)t=_s(t,n),yield n[t],e++,t+=e%2?2:-1}function*dp(n){let t=n.length-1,e=0;for(;t>=0;)t=_s(t,n),yield n[t],e++,t+=e%2?-2:1}function*pp(n){for(;;){const t=Math.floor(Math.random()*n.length);yield n[t]}}function*fp(n){const t=[];for(let e=0;e<n.length;e++)t.push(e);for(;t.length>0;){const e=t.splice(Math.floor(t.length*Math.random()),1),s=_s(e[0],n);yield n[s]}}function*mp(n){let t=Math.floor(Math.random()*n.length);for(;;)t===0?t++:t===n.length-1||Math.random()<.5?t--:t++,yield n[t]}function*Wr(n,t="up",e=0){switch(q(n.length>0,"The array must have more than one value in it"),t){case"up":yield*ys(n,hp);case"down":yield*ys(n,up);case"upDown":yield*jr(n,!0);case"downUp":yield*jr(n,!1);case"alternateUp":yield*ys(n,lp);case"alternateDown":yield*ys(n,dp);case"random":yield*pp(n);case"randomOnce":yield*ys(n,fp);case"randomWalk":yield*mp(n)}}class mi extends Ls{constructor(){super(m(mi.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const t=m(mi.getDefaults(),arguments,["callback","values","pattern"]);this.callback=t.callback,this._values=t.values,this._pattern=Wr(t.values,t.pattern),this._type=t.pattern}static getDefaults(){return Object.assign(Ls.getDefaults(),{pattern:"up",values:[],callback:X})}_tick(t){const e=this._pattern.next();this._value=e.value,this.callback(t,this._value)}get values(){return this._values}set values(t){this._values=t,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(t){this._type=t,this._pattern=Wr(this._values,this._type)}}class _i extends oe{constructor(){super(m(_i.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new ws({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const t=m(_i.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(t.subdivision),this.events=t.events,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.playbackRate=t.playbackRate,this.probability=t.probability,this.humanize=t.humanize,this.mute=t.mute,this.playbackRate=t.playbackRate}static getDefaults(){return Object.assign(St(oe.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(t,e){e!==null&&this.callback(t,e)}get events(){return this._events}set events(t){this.clear(),this._eventsArray=t,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(t,e){return this._part.start(t,e&&this._indexTime(e)),this}stop(t){return this._part.stop(t),this}get subdivision(){return new st(this.context,this._subdivision).toSeconds()}_createSequence(t){return new Proxy(t,{get:(e,s)=>e[s],set:(e,s,i)=>(se(s)&&isFinite(parseInt(s,10))&&Ct(i)?e[s]=this._createSequence(i):e[s]=i,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(t,e,s){t.forEach((i,r)=>{const o=r*e+s;if(Ct(i))this._rescheduleSequence(i,e/i.length,o);else{const a=new st(this.context,o,"i").toSeconds();this._part.add(a,i)}})}_indexTime(t){return new st(this.context,t*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(t){this._part.loop=t}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this._part.loopStart=this._indexTime(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,t===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(t)}get startOffset(){return this._part.startOffset}set startOffset(t){this._part.startOffset=t}get playbackRate(){return this._part.playbackRate}set playbackRate(t){this._part.playbackRate=t}get probability(){return this._part.probability}set probability(t){this._part.probability=t}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(t){this._part.humanize=t}get length(){return this._part.length}}class cs extends D{constructor(){super(Object.assign(m(cs.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new np({context:this.context}),this.a=new I({context:this.context,gain:0}),this.b=new I({context:this.context,gain:0}),this.output=new I({context:this.context}),this._internalChannels=[this.a,this.b];const t=m(cs.getDefaults(),arguments,["fade"]);this.fade=new L({context:this.context,units:"normalRange",value:t.fade}),P(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",zt(this._split,this.a.gain,0),zt(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(D.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class vt extends D{constructor(t){super(t),this.name="Effect",this._dryWet=new cs({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new I({context:this.context}),this.effectReturn=new I({context:this.context}),this.input=new I({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],P(this,"wet")}static getDefaults(){return Object.assign(D.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class Cn extends vt{constructor(t){super(t),this.name="LFOEffect",this._lfo=new Rt({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,P(this,["frequency","depth"])}static getDefaults(){return Object.assign(vt.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class gi extends Cn{constructor(){super(m(gi.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const t=m(gi.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new jt(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(Cn.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class js extends D{constructor(){super(Object.assign(m(js.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=m(js.getDefaults(),arguments,["pan"]);this.pan=new z({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",P(this,"pan")}static getDefaults(){return Object.assign(D.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class yi extends Cn{constructor(){super(m(yi.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const t=m(yi.getDefaults(),arguments,["frequency"]);this._panner=new js({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(Cn.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Ws extends D{constructor(){super(m(Ws.getDefaults(),arguments,["smoothing"])),this.name="Follower";const t=m(Ws.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new sp({context:this.context}),this._lowpass=this.output=new Fs({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(D.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class vi extends vt{constructor(){super(m(vi.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const t=m(vi.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Ws({context:this.context,smoothing:t.follower}),this._sweepRange=new An({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this._inputBoost=new I({context:this.context}),this._bandpass=new jt({context:this.context,rolloff:-48,frequency:0,Q:t.Q}),this._peaking=new jt({context:this.context,type:"peaking"}),this._peaking.gain.value=t.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=t.sensitivity,P(this,["gain","Q"])}static getDefaults(){return Object.assign(vt.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(t){this._follower.smoothing=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._setSweepRange()}get sensitivity(){return jn(1/this._inputBoost.gain.value)}set sensitivity(t){this._inputBoost.gain.value=1/Ts(t)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const ia="bit-crusher",_p=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;sa(ia,_p);class wi extends vt{constructor(){super(m(wi.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const t=m(wi.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new On({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(vt.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class On extends di{constructor(){super(m(On.getDefaults(),arguments)),this.name="BitCrusherWorklet";const t=m(On.getDefaults(),arguments);this.input=new I({context:this.context}),this.output=new I({context:this.context}),this.bits=new z({context:this.context,value:t.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(di.getDefaults(),{bits:12})}_audioWorkletName(){return ia}onReady(t){Yt(this.input,t,this.output);const e=t.parameters.get("bits");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class xi extends vt{constructor(){super(m(xi.getDefaults(),arguments,["order"])),this.name="Chebyshev";const t=m(xi.getDefaults(),arguments,["order"]);this._shaper=new ne({context:this.context,length:4096}),this._order=t.order,this.connectEffect(this._shaper),this.order=t.order,this.oversample=t.oversample}static getDefaults(){return Object.assign(vt.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(t,e,s){return s.has(e)||(e===0?s.set(e,0):e===1?s.set(e,t):s.set(e,2*t*this._getCoefficient(t,e-1,s)-this._getCoefficient(t,e-2,s))),s.get(e)}get order(){return this._order}set order(t){this._order=t,this._shaper.setMap(e=>this._getCoefficient(e,t,new Map))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class ze extends D{constructor(){super(m(ze.getDefaults(),arguments,["channels"])),this.name="Split";const t=m(ze.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(D.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Me extends D{constructor(){super(m(Me.getDefaults(),arguments,["channels"])),this.name="Merge";const t=m(Me.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(D.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class ae extends D{constructor(t){super(t),this.name="StereoEffect",this.input=new I({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new cs({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new ze({context:this.context,channels:2}),this._merge=new Me({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),P(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),Yt(...t),zt(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),Yt(...t),zt(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(D.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class bi extends ae{constructor(t){super(t),this.feedback=new L({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new I({context:this.context}),this._feedbackR=new I({context:this.context}),this._feedbackSplit=new ze({context:this.context,channels:2}),this._feedbackMerge=new Me({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),P(this,["feedback"])}static getDefaults(){return Object.assign(ae.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Ti extends bi{constructor(){super(m(Ti.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const t=m(Ti.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new Rt({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new Rt({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new Bt({context:this.context}),this._delayNodeR=new Bt({context:this.context}),this.frequency=this._lfoL.frequency,P(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(bi.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return this._delayTime*1e3}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Si extends vt{constructor(){super(m(Si.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=m(Si.getDefaults(),arguments,["distortion"]);this._shaper=new ne({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(vt.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=t*100,s=Math.PI/180;this._shaper.setMap(i=>Math.abs(i)<.001?0:(3+e)*i*20*s/(Math.PI+e*Math.abs(i)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Nn extends vt{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new I({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,P(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(vt.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class ki extends Nn{constructor(){super(m(ki.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const t=m(ki.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Bt({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),P(this,"delayTime")}static getDefaults(){return Object.assign(Nn.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class gp extends D{constructor(t){super(t),this.name="PhaseShiftAllpass",this.input=new I({context:this.context}),this.output=new I({context:this.context}),this.offset90=new I({context:this.context});const e=[.6923878,.9360654322959,.988229522686,.9987488452737],s=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(e),this._bank1=this._createAllPassFilterBank(s),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),Yt(this.input,...this._bank0,this._oneSampleDelay,this.output),Yt(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(t){return t.map(s=>{const i=[[s*s,0,-1],[1,0,-(s*s)]];return this.context.createIIRFilter(i[0],i[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(t=>t.disconnect()),this._bank1.forEach(t=>t.disconnect()),this._oneSampleDelay.disconnect(),this}}class Di extends vt{constructor(){super(m(Di.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const t=m(Di.getDefaults(),arguments,["frequency"]);this.frequency=new L({context:this.context,units:"frequency",value:t.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new As({context:this.context,type:"sine"}),this._cosine=new at({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new ht({context:this.context}),this._cosineMultiply=new ht({context:this.context}),this._negate=new ta({context:this.context}),this._add=new fs({context:this.context}),this._phaseShifter=new gp({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const e=this.immediate();this._sine.start(e),this._cosine.start(e)}static getDefaults(){return Object.assign(vt.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const Br=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],zr=[225,556,441,341];class Ai extends ae{constructor(){super(m(Ai.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const t=m(Ai.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new L({context:this.context,value:t.roomSize,units:"normalRange"}),this._allpassFiltersL=zr.map(e=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=e,s}),this._allpassFiltersR=zr.map(e=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=e,s}),this._combFilters=Br.map((e,s)=>{const i=new Vs({context:this.context,dampening:t.dampening,delayTime:e});return s<Br.length/2?this.connectEffectLeft(i,...this._allpassFiltersL):this.connectEffectRight(i,...this._allpassFiltersR),this.roomSize.connect(i.resonance),i}),P(this,["roomSize"])}static getDefaults(){return Object.assign(ae.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach(e=>e.dampening=t)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(t=>t.disconnect()),this._allpassFiltersR.forEach(t=>t.disconnect()),this._combFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this}}const Ur=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],yp=[.773,.802,.753,.733],vp=[347,113,37];class Ci extends ae{constructor(){super(m(Ci.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const t=m(Ci.getDefaults(),arguments,["roomSize"]);this.roomSize=new L({context:this.context,value:t.roomSize,units:"normalRange"}),this._scaleRoomSize=new ve({context:this.context,min:-.733,max:.197}),this._allpassFilters=vp.map(e=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=e,s}),this._feedbackCombFilters=Ur.map((e,s)=>{const i=new qs({context:this.context,delayTime:e});return this._scaleRoomSize.connect(i.resonance),i.resonance.value=yp[s],s<Ur.length/2?this.connectEffectLeft(...this._allpassFilters,i):this.connectEffectRight(...this._allpassFilters,i),i}),this.roomSize.connect(this._scaleRoomSize),P(this,["roomSize"])}static getDefaults(){return Object.assign(ae.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(t=>t.disconnect()),this._feedbackCombFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class Gr extends bi{constructor(t){super(t),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),P(this,["feedback"])}}class Oi extends Gr{constructor(){super(m(Oi.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const t=m(Oi.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new Bt({context:this.context,maxDelay:t.maxDelay}),this._rightDelay=new Bt({context:this.context,maxDelay:t.maxDelay}),this._rightPreDelay=new Bt({context:this.context,maxDelay:t.maxDelay}),this.delayTime=new L({context:this.context,units:"time",value:t.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),P(this,["delayTime"])}static getDefaults(){return Object.assign(Gr.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class Ni extends Nn{constructor(){super(m(Ni.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const t=m(Ni.getDefaults(),arguments,["pitch"]);this._frequency=new L({context:this.context}),this._delayA=new Bt({maxDelay:1,context:this.context}),this._lfoA=new Rt({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new Bt({maxDelay:1,context:this.context}),this._lfoB=new Rt({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new cs({context:this.context}),this._crossFadeLFO=new Rt({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new Bt({delayTime:t.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,P(this,"delayTime"),this._pitch=t.pitch,this._windowSize=t.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const e=this.now();this._lfoA.start(e),this._lfoB.start(e),this._crossFadeLFO.start(e),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(Nn.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(t){this._pitch=t;let e=0;t<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,e=Ss(t-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,e=Ss(t)-1),this._frequency.value=e*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(t){this._windowSize=this.toSeconds(t),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Ei extends ae{constructor(){super(m(Ei.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const t=m(Ei.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new Rt({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new Rt({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this.Q=new L({context:this.context,value:t.Q,units:"positive"}),this._filtersL=this._makeFilters(t.stages,this._lfoL),this._filtersR=this._makeFilters(t.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=t.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=t.baseFrequency,this.octaves=t.octaves,this._lfoL.start(),this._lfoR.start(),P(this,["frequency","Q"])}static getDefaults(){return Object.assign(ae.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(t,e){const s=[];for(let i=0;i<t;i++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),e.connect(r.frequency),s.push(r)}return s}get octaves(){return this._octaves}set octaves(t){this._octaves=t;const e=this._baseFrequency*Math.pow(2,t);this._lfoL.max=e,this._lfoR.max=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(t=>t.disconnect()),this._filtersR.forEach(t=>t.disconnect()),this.frequency.dispose(),this}}class Mi extends vt{constructor(){super(m(Mi.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=m(Mi.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(vt.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),Tt(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),Tt(t,0),this._preDelay=t,this.generate()}generate(){return et(this,void 0,void 0,function*(){const t=this.ready,e=new en(2,this._decay+this._preDelay,this.context.sampleRate),s=new Ne({context:e}),i=new Ne({context:e}),r=new Me({context:e});s.connect(r,0,0),i.connect(r,0,1);const o=new I({context:e}).toDestination();r.connect(o),s.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(X),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class zn extends D{constructor(){super(m(zn.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new ze({channels:2,context:this.context}),this._midAdd=new fs({context:this.context}),this.mid=new ht({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new ms({context:this.context}),this.side=new ht({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class Un extends D{constructor(){super(m(Un.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new I({context:this.context}),this.side=new I({context:this.context}),this._left=new fs({context:this.context}),this._leftMult=new ht({context:this.context,value:Math.SQRT1_2}),this._right=new ms({context:this.context}),this._rightMult=new ht({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Me({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Zr extends vt{constructor(t){super(t),this.name="MidSideEffect",this._midSideMerge=new Un({context:this.context}),this._midSideSplit=new zn({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...t){this._midSend.chain(...t,this._midReturn)}connectEffectSide(...t){this._sideSend.chain(...t,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Ri extends Zr{constructor(){super(m(Ri.getDefaults(),arguments,["width"])),this.name="StereoWidener";const t=m(Ri.getDefaults(),arguments,["width"]);this.width=new L({context:this.context,value:t.width,units:"normalRange"}),P(this,["width"]),this._twoTimesWidthMid=new ht({context:this.context,value:2}),this._twoTimesWidthSide=new ht({context:this.context,value:2}),this._midMult=new ht({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new ms({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),zt(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new ht({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Zr.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Ii extends ae{constructor(){super(m(Ii.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const t=m(Ii.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new Rt({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new Rt({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new I({context:this.context}),this._amplitudeR=new I({context:this.context}),this.frequency=new L({context:this.context,value:t.frequency,units:"frequency"}),this.depth=new L({context:this.context,value:t.depth,units:"normalRange"}),P(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(ae.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class qi extends vt{constructor(){super(m(qi.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const t=m(qi.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new Bt({context:this.context,delayTime:0,maxDelay:t.maxDelay}),this._lfo=new Rt({context:this.context,type:t.type,min:0,max:t.maxDelay,frequency:t.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=t.depth,P(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(vt.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Bs extends D{constructor(){super(m(Bs.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const t=m(Bs.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new I({context:this.context}),this._split=new ze({context:this.context,channels:t.channels}),this.input.connect(this._split),Tt(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type}static getDefaults(){return Object.assign(D.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((t,e)=>{const s=this._buffers[e];this._type==="fft"?t.getFloatFrequencyData(s):this._type==="waveform"&&t.getFloatTimeDomainData(s)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach((e,s)=>{e.fftSize=t*2,this._buffers[s]=new Float32Array(t)})}get channels(){return this._analysers.length}get type(){return this._type}set type(t){q(t==="waveform"||t==="fft",`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach(e=>e.smoothingTimeConstant=t)}dispose(){return super.dispose(),this._analysers.forEach(t=>t.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class Re extends D{constructor(){super(m(Re.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Bs({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Fi extends Re{constructor(){super(m(Fi.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const t=m(Fi.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Bs({context:this.context,size:256,type:"waveform",channels:t.channels}),this.smoothing=t.smoothing,this.normalRange=t.normalRange}static getDefaults(){return Object.assign(Re.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return Hs("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),s=(this.channels===1?[t]:t).map(i=>{const r=i.reduce((a,c)=>a+c*c,0),o=Math.sqrt(r/i.length);return this._rms=Math.max(o,this._rms*this.smoothing),this.normalRange?this._rms:jn(this._rms)});return this.channels===1?s[0]:s}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Vi extends Re{constructor(){super(m(Vi.getDefaults(),arguments,["size"])),this.name="FFT";const t=m(Vi.getDefaults(),arguments,["size"]);this.normalRange=t.normalRange,this._analyser.type="fft",this.size=t.size}static getDefaults(){return Object.assign(D.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(e=>this.normalRange?Ts(e):e)}get size(){return this._analyser.size}set size(t){this._analyser.size=t}get smoothing(){return this._analyser.smoothing}set smoothing(t){this._analyser.smoothing=t}getFrequencyOfIndex(t){return q(0<=t&&t<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),t*this.context.sampleRate/(this.size*2)}}class ra extends Re{constructor(){super(m(ra.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Pi extends Re{constructor(){super(m(Pi.getDefaults(),arguments,["size"])),this.name="Waveform";const t=m(Pi.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=t.size}static getDefaults(){return Object.assign(Re.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(t){this._analyser.size=t}}class ft extends D{constructor(){super(m(ft.getDefaults(),arguments,["solo"])),this.name="Solo";const t=m(ft.getDefaults(),arguments,["solo"]);this.input=this.output=new I({context:this.context}),ft._allSolos.has(this.context)||ft._allSolos.set(this.context,new Set),ft._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(D.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),ft._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ft._soloed.has(this.context)||ft._soloed.set(this.context,new Set),ft._soloed.get(this.context).add(this)}_removeSolo(){ft._soloed.has(this.context)&&ft._soloed.get(this.context).delete(this)}_isSoloed(){return ft._soloed.has(this.context)&&ft._soloed.get(this.context).has(this)}_noSolos(){return!ft._soloed.has(this.context)||ft._soloed.has(this.context)&&ft._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ft._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ft._allSolos=new Map;ft._soloed=new Map;class En extends D{constructor(){super(m(En.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=m(En.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new js({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new ge({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,P(this,["pan","volume"])}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Pe extends D{constructor(){super(m(Pe.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=m(Pe.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new ft({solo:t.solo,context:this.context}),this._panVol=this.output=new En({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),P(this,["pan","volume"])}static getDefaults(){return Object.assign(D.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return Pe.buses.has(t)||Pe.buses.set(t,new I({context:this.context})),Pe.buses.get(t)}send(t,e=0){const s=this._getBus(t),i=new I({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(s),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Pe.buses=new Map;class oa extends D{constructor(){super(m(oa.getDefaults(),arguments)),this.name="Mono",this.input=new I({context:this.context}),this._merge=this.output=new Me({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class zs extends D{constructor(){super(m(zs.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new I({context:this.context}),this.output=void 0,this.low=new jt({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new jt({context:this.context,frequency:0,type:"highpass"}),this.mid=new jt({context:this.context,frequency:0,type:"lowpass"}),this.high=new jt({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const t=m(zs.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new L({context:this.context,units:"frequency",value:t.lowFrequency}),this.highFrequency=new L({context:this.context,units:"frequency",value:t.highFrequency}),this.Q=new L({context:this.context,units:"positive",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),P(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(D.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),tn(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let wp=class extends D{constructor(){super(...arguments),this.name="Listener",this.positionX=new z({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new z({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new z({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new z({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new z({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new z({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new z({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new z({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new z({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(D.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};Pn(n=>{n.listener=new wp({context:n})});Ln(n=>{n.listener.dispose()});class Li extends D{constructor(){super(m(Li.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const t=m(Li.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=t.panningModel,this.maxDistance=t.maxDistance,this.distanceModel=t.distanceModel,this.coneOuterGain=t.coneOuterGain,this.coneOuterAngle=t.coneOuterAngle,this.coneInnerAngle=t.coneInnerAngle,this.refDistance=t.refDistance,this.rolloffFactor=t.rolloffFactor,this.positionX=new z({context:this.context,param:this._panner.positionX,value:t.positionX}),this.positionY=new z({context:this.context,param:this._panner.positionY,value:t.positionY}),this.positionZ=new z({context:this.context,param:this._panner.positionZ,value:t.positionZ}),this.orientationX=new z({context:this.context,param:this._panner.orientationX,value:t.orientationX}),this.orientationY=new z({context:this.context,param:this._panner.orientationY,value:t.orientationY}),this.orientationZ=new z({context:this.context,param:this._panner.orientationZ,value:t.orientationZ})}static getDefaults(){return Object.assign(D.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(t,e,s){return this.positionX.value=t,this.positionY.value=e,this.positionZ.value=s,this}setOrientation(t,e,s){return this.orientationX.value=t,this.orientationY.value=e,this.orientationZ.value=s,this}get panningModel(){return this._panner.panningModel}set panningModel(t){this._panner.panningModel=t}get refDistance(){return this._panner.refDistance}set refDistance(t){this._panner.refDistance=t}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(t){this._panner.rolloffFactor=t}get distanceModel(){return this._panner.distanceModel}set distanceModel(t){this._panner.distanceModel=t}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(t){this._panner.coneInnerAngle=t}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(t){this._panner.coneOuterAngle=t}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(t){this._panner.coneOuterGain=t}get maxDistance(){return this._panner.maxDistance}set maxDistance(t){this._panner.maxDistance=t}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class dn extends D{constructor(){super(m(dn.getDefaults(),arguments)),this.name="Recorder";const t=m(dn.getDefaults(),arguments);this.input=new I({context:this.context}),q(dn.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return D.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return me!==null&&Reflect.has(me,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return et(this,void 0,void 0,function*(){q(this.state!=="started","Recorder is already started");const t=new Promise(e=>{const s=()=>{this._recorder.removeEventListener("start",s,!1),e()};this._recorder.addEventListener("start",s,!1)});return this._recorder.start(),yield t})}stop(){return et(this,void 0,void 0,function*(){q(this.state!=="stopped","Recorder is not started");const t=new Promise(e=>{const s=i=>{this._recorder.removeEventListener("dataavailable",s,!1),e(i.data)};this._recorder.addEventListener("dataavailable",s,!1)});return this._recorder.stop(),yield t})}pause(){return q(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class _e extends D{constructor(){super(m(_e.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=m(_e.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new z({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new z({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new z({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new z({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new z({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),P(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(D.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class ji extends D{constructor(){super(Object.assign(m(ji.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const t=m(ji.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Ws({context:this.context,smoothing:t.smoothing}),this._gt=new Dn({context:this.context,value:Ts(t.threshold)}),this.input=new I({context:this.context}),this._gate=this.output=new I({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(D.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return jn(this._gt.value)}set threshold(t){this._gt.value=Ts(t)}get smoothing(){return this._follower.smoothing}set smoothing(t){this._follower.smoothing=t}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Wi extends D{constructor(){super(Object.assign(m(Wi.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const t=m(Wi.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new _e({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,P(this,"threshold")}static getDefaults(){return Object.assign(D.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class Bi extends D{constructor(){super(Object.assign(m(Bi.getDefaults(),arguments))),this.name="MidSideCompressor";const t=m(Bi.getDefaults(),arguments);this._midSideSplit=this.input=new zn({context:this.context}),this._midSideMerge=this.output=new Un({context:this.context}),this.mid=new _e(Object.assign(t.mid,{context:this.context})),this.side=new _e(Object.assign(t.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),P(this,["mid","side"])}static getDefaults(){return Object.assign(D.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class zi extends D{constructor(){super(Object.assign(m(zi.getDefaults(),arguments))),this.name="MultibandCompressor";const t=m(zi.getDefaults(),arguments);this._splitter=this.input=new zs({context:this.context,lowFrequency:t.lowFrequency,highFrequency:t.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new I({context:this.context}),this.low=new _e(Object.assign(t.low,{context:this.context})),this.mid=new _e(Object.assign(t.mid,{context:this.context})),this.high=new _e(Object.assign(t.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),P(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(D.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class Ui extends D{constructor(){super(m(Ui.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new I({context:this.context}),this._internalChannels=[];const t=m(Ui.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new zs({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new I({context:this.context,gain:t.low,units:"decibels"}),this._midGain=new I({context:this.context,gain:t.mid,units:"decibels"}),this._highGain=new I({context:this.context,gain:t.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),P(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(D.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),tn(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Gi extends D{constructor(){super(m(Gi.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const t=m(Gi.getDefaults(),arguments,["url","onload"]);this._buffer=new H(t.url,e=>{this.buffer=e,t.onload()}),this.input=new I({context:this.context}),this.output=new I({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=t.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(D.getDefaults(),{normalize:!0,onload:X})}load(t){return et(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(t)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(t){t&&this._buffer.set(t),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const e=this._buffer.get();this._convolver.buffer=e||null}get normalize(){return this._convolver.normalize}set normalize(t){this._convolver.normalize=t}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function hf(){return ct().now()}function uf(){return ct().immediate()}const lf=ct().transport;function df(){return ct().transport}const pf=ct().destination,ff=ct().destination;function mf(){return ct().destination}const _f=ct().listener;function gf(){return ct().listener}const yf=ct().draw;function vf(){return ct().draw}const wf=ct();function xf(){return H.loaded()}const bf=H,Tf=nn,Sf=Oe;export{Cs as AMOscillator,ea as AMSynth,sp as Abs,fs as Add,rn as AmplitudeEnvelope,Bs as Analyser,mr as AudioToGain,gi as AutoFilter,yi as AutoPanner,vi as AutoWah,$o as BaseContext,Ms as BiquadFilter,wi as BitCrusher,bf as Buffer,Sf as BufferSource,Tf as Buffers,Pe as Channel,xi as Chebyshev,Ti as Chorus,ns as Clock,_e as Compressor,Ks as Context,Gi as Convolver,cs as CrossFade,ra as DCMeter,Bt as Delay,pf as Destination,Si as Distortion,yf as Draw,ci as DuoSynth,Ui as EQ3,Js as Emitter,Dt as Envelope,Vi as FFT,is as FMOscillator,hi as FMSynth,Os as FatOscillator,qs as FeedbackCombFilter,ki as FeedbackDelay,jt as Filter,Ws as Follower,Ai as Freeverb,Kp as Frequency,Ft as FrequencyClass,Rs as FrequencyEnvelope,Di as FrequencyShifter,I as Gain,np as GainToAudio,ji as Gate,ai as GrainPlayer,Dn as GreaterThan,gr as GreaterThanZero,Jd as IntervalTimeline,Ci as JCReverb,Rt as LFO,Wi as Limiter,_f as Listener,Ls as Loop,Vs as LowpassCombFilter,ff as Master,Is as MembraneSynth,Me as Merge,ui as MetalSynth,Fi as Meter,Bi as MidSideCompressor,Un as MidSideMerge,zn as MidSideSplit,sf as Midi,Ds as MidiClass,oa as Mono,je as MonoSynth,zi as MultibandCompressor,zs as MultibandSplit,ht as Multiply,ta as Negate,Ne as Noise,li as NoiseSynth,ef as Offline,en as OfflineContext,ye as OmniOscillator,Fs as OnePoleFilter,at as Oscillator,Ns as PWMOscillator,En as PanVol,js as Panner,Li as Panner3D,z as Param,ws as Part,mi as Pattern,Ei as Phaser,Oi as PingPongDelay,Ni as PitchShift,os as Player,oi as Players,pi as PluckSynth,fi as PolySynth,Es as Pow,rs as PulseOscillator,dn as Recorder,Mi as Reverb,Ps as Sampler,ve as Scale,An as ScaleExp,_i as Sequence,L as Signal,ft as Solo,ze as Split,sn as StateTimeline,Ri as StereoWidener,ms as Subtract,af as SyncedSignal,Ee as Synth,nf as Ticks,st as TicksClass,Jp as Time,$t as TimeClass,le as Timeline,H as ToneAudioBuffer,nn as ToneAudioBuffers,D as ToneAudioNode,Oe as ToneBufferSource,oe as ToneEvent,As as ToneOscillatorNode,lf as Transport,tf as TransportTime,gt as TransportTimeClass,Ii as Tremolo,of as Unit,vs as UserMedia,qi as Vibrato,ge as Volume,ne as WaveShaper,Pi as Waveform,_r as Zero,zt as connect,Yt as connectSeries,Bn as connectSignal,wf as context,Ts as dbToGain,Yp as debug,Kt as defaultArg,Ho as disconnect,Le as ftom,jn as gainToDb,ct as getContext,mf as getDestination,vf as getDraw,gf as getListener,df as getTransport,uf as immediate,Ss as intervalToFrequencyRatio,Ct as isArray,Wo as isBoolean,$ as isDefined,qd as isFunction,cn as isNote,Xt as isNumber,De as isObject,se as isString,Wt as isUndef,xf as loaded,Yo as mtof,hf as now,m as optionsFromArguments,ni as setContext,Hp as start,Xp as supported,$r as version};
